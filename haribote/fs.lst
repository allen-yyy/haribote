     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_GetMyObj
     7 00000000                                 	EXTERN	_message_send
     8 00000000                                 	EXTERN	_message_receive
     9 00000000                                 	EXTERN	_task_alloc
    10 00000000                                 	EXTERN	_memman_alloc_4k
    11 00000000                                 	EXTERN	_task_run
    12 00000000                                 [FILE "fs.c"]
    13                                          [SECTION .data]
    14 00000000                                 LC0:
    15 00000000 46 53 00                        	DB	"FS",0x00
    16 00000003                                 LC1:
    17 00000003 49 64 65 20 48 44 00            	DB	"Ide HD",0x00
    18                                          [SECTION .text]
    19 00000000                                 	GLOBAL	_FS_task
    20 00000000                                 _FS_task:
    21 00000000 55                              	PUSH	EBP
    22 00000001 89 E5                           	MOV	EBP,ESP
    23 00000003 56                              	PUSH	ESI
    24 00000004 53                              	PUSH	EBX
    25 00000005 83 EC 20                        	SUB	ESP,32
    26 00000008 68 [00000000]                   	PUSH	LC0
    27 0000000D E8 [00000000]                   	CALL	_GetMyObj
    28 00000012 68 [00000003]                   	PUSH	LC1
    29 00000017 E8 [00000000]                   	CALL	_GetMyObj
    30 0000001C C7 03 00000001                  	MOV	DWORD [EBX],1
    31 00000022 53                              	PUSH	EBX
    32 00000023 89 C6                           	MOV	ESI,EAX
    33 00000025 8B 40 08                        	MOV	EAX,DWORD [8+EAX]
    34 00000028 FF B0 0000012C                  	PUSH	DWORD [300+EAX]
    35 0000002E E8 [00000000]                   	CALL	_message_send
    36 00000033 53                              	PUSH	EBX
    37 00000034 68 00002710                     	PUSH	10000
    38 00000039 E8 [00000000]                   	CALL	_message_receive
    39 0000003E                                 L9:
    40 0000003E 83 C4 18                        	ADD	ESP,24
    41 00000041                                 L2:
    42 00000041 53                              	PUSH	EBX
    43 00000042 68 00002710                     	PUSH	10000
    44 00000047 E8 [00000000]                   	CALL	_message_receive
    45 0000004C 83 3B 01                        	CMP	DWORD [EBX],1
    46 0000004F 58                              	POP	EAX
    47 00000050 5A                              	POP	EDX
    48 00000051 75 EE                           	JNE	L2
    49 00000053 C7 03 00000002                  	MOV	DWORD [EBX],2
    50 00000059 53                              	PUSH	EBX
    51 0000005A 8B 46 08                        	MOV	EAX,DWORD [8+ESI]
    52 0000005D FF B0 0000012C                  	PUSH	DWORD [300+EAX]
    53 00000063 E8 [00000000]                   	CALL	_message_send
    54 00000068 53                              	PUSH	EBX
    55 00000069 8B 46 08                        	MOV	EAX,DWORD [8+ESI]
    56 0000006C FF B0 0000012C                  	PUSH	DWORD [300+EAX]
    57 00000072 E8 [00000000]                   	CALL	_message_receive
    58 00000077 53                              	PUSH	EBX
    59 00000078 FF 73 0C                        	PUSH	DWORD [12+EBX]
    60 0000007B E8 [00000000]                   	CALL	_message_send
    61 00000080 EB BC                           	JMP	L9
    62 00000082                                 	GLOBAL	_FSEntry
    63 00000082                                 _FSEntry:
    64 00000082 55                              	PUSH	EBP
    65 00000083 89 E5                           	MOV	EBP,ESP
    66 00000085 56                              	PUSH	ESI
    67 00000086 53                              	PUSH	EBX
    68 00000087 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    69 0000008A E8 [00000000]                   	CALL	_task_alloc
    70 0000008F 68 00010000                     	PUSH	65536
    71 00000094 89 C3                           	MOV	EBX,EAX
    72 00000096 FF 76 04                        	PUSH	DWORD [4+ESI]
    73 00000099 E8 [00000000]                   	CALL	_memman_alloc_4k
    74 0000009E 05 00010000                     	ADD	EAX,65536
    75 000000A3 89 43 64                        	MOV	DWORD [100+EBX],EAX
    76 000000A6 C7 43 4C [00000000]             	MOV	DWORD [76+EBX],_FS_task
    77 000000AD C7 43 74 00000008               	MOV	DWORD [116+EBX],8
    78 000000B4 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
    79 000000BB C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
    80 000000C2 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
    81 000000CC C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
    82 000000D6 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
    83 000000E0 6A 01                           	PUSH	1
    84 000000E2 6A 04                           	PUSH	4
    85 000000E4 53                              	PUSH	EBX
    86 000000E5 E8 [00000000]                   	CALL	_task_run
    87 000000EA B8 00000001                     	MOV	EAX,1
    88 000000EF 89 5E 08                        	MOV	DWORD [8+ESI],EBX
    89 000000F2 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    90 000000F5 5B                              	POP	EBX
    91 000000F6 5E                              	POP	ESI
    92 000000F7 5D                              	POP	EBP
    93 000000F8 C3                              	RET
