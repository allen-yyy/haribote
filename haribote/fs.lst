     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_memman_alloc
     7 00000000                                 	EXTERN	_message_receive
     8 00000000                                 	EXTERN	_devcalls
     9 00000000                                 	EXTERN	_message_send
    10 00000000                                 	EXTERN	_FAT12_init
    11 00000000                                 	EXTERN	_io_cli
    12 00000000                                 	EXTERN	_io_hlt
    13 00000000                                 	EXTERN	_dDevs
    14 00000000                                 	EXTERN	_task_alloc
    15 00000000                                 	EXTERN	_memman_alloc_4k
    16 00000000                                 	EXTERN	_task_run
    17 00000000                                 [FILE "fs.c"]
    18                                          [SECTION .text]
    19 00000000                                 	GLOBAL	_FS_task
    20 00000000                                 _FS_task:
    21 00000000 55                              	PUSH	EBP
    22 00000001 89 E5                           	MOV	EBP,ESP
    23 00000003 56                              	PUSH	ESI
    24 00000004 53                              	PUSH	EBX
    25 00000005 BE 00000001                     	MOV	ESI,1
    26 0000000A 83 EC 44                        	SUB	ESP,68
    27 0000000D 8D 5D D8                        	LEA	EBX,DWORD [-40+EBP]
    28 00000010 68 00000200                     	PUSH	512
    29 00000015 68 003C0000                     	PUSH	3932160
    30 0000001A E8 [00000000]                   	CALL	_memman_alloc
    31 0000001F 53                              	PUSH	EBX
    32 00000020 C7 45 D8 00000001               	MOV	DWORD [-40+EBP],1
    33 00000027 89 45 E0                        	MOV	DWORD [-32+EBP],EAX
    34 0000002A E8 0000011D                     	CALL	_fs_send2hd
    35 0000002F 53                              	PUSH	EBX
    36 00000030 68 00002710                     	PUSH	10000
    37 00000035 E8 [00000000]                   	CALL	_message_receive
    38 0000003A 83 C4 14                        	ADD	ESP,20
    39 0000003D 8B 45 E0                        	MOV	EAX,DWORD [-32+EBP]
    40 00000040 8B 40 78                        	MOV	EAX,DWORD [120+EAX]
    41 00000043 89 45 B4                        	MOV	DWORD [-76+EBP],EAX
    42 00000046                                 L2:
    43 00000046 8D 5D B8                        	LEA	EBX,DWORD [-72+EBP]
    44 00000049 53                              	PUSH	EBX
    45 0000004A 68 00002710                     	PUSH	10000
    46 0000004F E8 [00000000]                   	CALL	_message_receive
    47 00000054 59                              	POP	ECX
    48 00000055 58                              	POP	EAX
    49 00000056 8B 45 B8                        	MOV	EAX,DWORD [-72+EBP]
    50 00000059 83 F8 02                        	CMP	EAX,2
    51 0000005C 75 21                           	JNE	L17
    52 0000005E 8D 5D D8                        	LEA	EBX,DWORD [-40+EBP]
    53 00000061 A1 [00000000]                   	MOV	EAX,DWORD [_devcalls]
    54 00000066 53                              	PUSH	EBX
    55 00000067 FF 70 0C                        	PUSH	DWORD [12+EAX]
    56 0000006A E8 [00000000]                   	CALL	_message_send
    57 0000006F 53                              	PUSH	EBX
    58 00000070 68 00002710                     	PUSH	10000
    59 00000075 E8 [00000000]                   	CALL	_message_receive
    60 0000007A 83 C4 10                        	ADD	ESP,16
    61 0000007D EB C7                           	JMP	L2
    62 0000007F                                 L17:
    63 0000007F 83 F8 02                        	CMP	EAX,2
    64 00000082 7E 22                           	JLE	L18
    65 00000084 83 F8 03                        	CMP	EAX,3
    66 00000087 75 BD                           	JNE	L2
    67 00000089 83 FE 01                        	CMP	ESI,1
    68 0000008C 75 07                           	JNE	L19
    69 0000008E E8 [00000000]                   	CALL	_FAT12_init
    70 00000093 EB B1                           	JMP	L2
    71 00000095                                 L19:
    72 00000095 83 FE 02                        	CMP	ESI,2
    73 00000098 74 AC                           	JE	L2
    74 0000009A E8 [00000000]                   	CALL	_io_cli
    75 0000009F E8 [00000000]                   	CALL	_io_hlt
    76 000000A4 EB A0                           	JMP	L2
    77 000000A6                                 L18:
    78 000000A6 48                              	DEC	EAX
    79 000000A7 75 9D                           	JNE	L2
    80 000000A9 8D 45 B4                        	LEA	EAX,DWORD [-76+EBP]
    81 000000AC 53                              	PUSH	EBX
    82 000000AD 89 45 BC                        	MOV	DWORD [-68+EBP],EAX
    83 000000B0 A1 [00000014]                   	MOV	EAX,DWORD [_dDevs+20]
    84 000000B5 8B 40 08                        	MOV	EAX,DWORD [8+EAX]
    85 000000B8 FF B0 0000012C                  	PUSH	DWORD [300+EAX]
    86 000000BE E8 [00000000]                   	CALL	_message_send
    87 000000C3 58                              	POP	EAX
    88 000000C4 5A                              	POP	EDX
    89 000000C5 E9 FFFFFF7C                     	JMP	L2
    90 000000CA                                 	GLOBAL	_FSEntry
    91 000000CA                                 _FSEntry:
    92 000000CA 55                              	PUSH	EBP
    93 000000CB 89 E5                           	MOV	EBP,ESP
    94 000000CD 56                              	PUSH	ESI
    95 000000CE 53                              	PUSH	EBX
    96 000000CF 83 EC 10                        	SUB	ESP,16
    97 000000D2 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    98 000000D5 E8 [00000000]                   	CALL	_task_alloc
    99 000000DA 68 00010000                     	PUSH	65536
   100 000000DF 89 C3                           	MOV	EBX,EAX
   101 000000E1 FF 76 04                        	PUSH	DWORD [4+ESI]
   102 000000E4 E8 [00000000]                   	CALL	_memman_alloc_4k
   103 000000E9 05 00010000                     	ADD	EAX,65536
   104 000000EE 89 43 64                        	MOV	DWORD [100+EBX],EAX
   105 000000F1 C7 43 4C [00000000]             	MOV	DWORD [76+EBX],_FS_task
   106 000000F8 C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   107 000000FF C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   108 00000106 C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   109 0000010D C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   110 00000117 C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   111 00000121 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   112 0000012B 6A 01                           	PUSH	1
   113 0000012D 6A 02                           	PUSH	2
   114 0000012F 53                              	PUSH	EBX
   115 00000130 E8 [00000000]                   	CALL	_task_run
   116 00000135 8D 45 E8                        	LEA	EAX,DWORD [-24+EBP]
   117 00000138 89 5E 08                        	MOV	DWORD [8+ESI],EBX
   118 0000013B A3 [00000004]                   	MOV	DWORD [_devcalls+4],EAX
   119 00000140 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   120 00000143 B8 00000001                     	MOV	EAX,1
   121 00000148 5B                              	POP	EBX
   122 00000149 5E                              	POP	ESI
   123 0000014A 5D                              	POP	EBP
   124 0000014B C3                              	RET
   125 0000014C                                 	GLOBAL	_fs_send2hd
   126 0000014C                                 _fs_send2hd:
   127 0000014C 55                              	PUSH	EBP
   128 0000014D 89 E5                           	MOV	EBP,ESP
   129 0000014F 83 EC 20                        	SUB	ESP,32
   130 00000152 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   131 00000155 8B 02                           	MOV	EAX,DWORD [EDX]
   132 00000157 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
   133 0000015A 8D 45 E0                        	LEA	EAX,DWORD [-32+EBP]
   134 0000015D 80 4D F0 01                     	OR	BYTE [-16+EBP],1
   135 00000161 89 42 10                        	MOV	DWORD [16+EDX],EAX
   136 00000164 A1 [00000000]                   	MOV	EAX,DWORD [_devcalls]
   137 00000169 52                              	PUSH	EDX
   138 0000016A FF 70 0C                        	PUSH	DWORD [12+EAX]
   139 0000016D E8 [00000000]                   	CALL	_message_send
   140 00000172 C9                              	LEAVE
   141 00000173 C3                              	RET
