     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_inws
     8 00000000                                 	EXTERN	_outws
     9 00000000                                 	EXTERN	_io_in8
    10 00000000                                 	EXTERN	_message_receive
    11 00000000                                 	EXTERN	_message_send
    12 00000000                                 	EXTERN	_task_alloc
    13 00000000                                 	EXTERN	_memman_alloc_4k
    14 00000000                                 	EXTERN	_task_run
    15 00000000                                 	EXTERN	_devcalls
    16 00000000                                 [FILE "hd.c"]
    17                                          [SECTION .text]
    18 00000000                                 	GLOBAL	_readhddisk
    19 00000000                                 _readhddisk:
    20 00000000 55                              	PUSH	EBP
    21 00000001 89 E5                           	MOV	EBP,ESP
    22 00000003 57                              	PUSH	EDI
    23 00000004 56                              	PUSH	ESI
    24 00000005 53                              	PUSH	EBX
    25 00000006 50                              	PUSH	EAX
    26 00000007 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
    27 0000000A 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
    28 0000000D 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    29 00000010 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
    30 00000013 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
    31 00000016 6A 00                           	PUSH	0
    32 00000018 68 000001F7                     	PUSH	503
    33 0000001D E8 00000189                     	CALL	_WaitForBsy
    34 00000022 6A 00                           	PUSH	0
    35 00000024 68 000001F7                     	PUSH	503
    36 00000029 E8 00000150                     	CALL	_WaitForRdy
    37 0000002E 57                              	PUSH	EDI
    38 0000002F 68 000001F2                     	PUSH	498
    39 00000034 E8 [00000000]                   	CALL	_io_out8
    40 00000039 53                              	PUSH	EBX
    41 0000003A C1 FB 08                        	SAR	EBX,8
    42 0000003D 68 000001F3                     	PUSH	499
    43 00000042 E8 [00000000]                   	CALL	_io_out8
    44 00000047 83 C4 20                        	ADD	ESP,32
    45 0000004A 53                              	PUSH	EBX
    46 0000004B C1 FB 08                        	SAR	EBX,8
    47 0000004E 68 000001F4                     	PUSH	500
    48 00000053 E8 [00000000]                   	CALL	_io_out8
    49 00000058 53                              	PUSH	EBX
    50 00000059 68 000001F5                     	PUSH	501
    51 0000005E E8 [00000000]                   	CALL	_io_out8
    52 00000063 83 C4 10                        	ADD	ESP,16
    53 00000066 89 D8                           	MOV	EAX,EBX
    54 00000068 C1 F8 08                        	SAR	EAX,8
    55 0000006B 4E                              	DEC	ESI
    56 0000006C 74 4A                           	JE	L4
    57 0000006E 0D 000000E0                     	OR	EAX,224
    58 00000073                                 L3:
    59 00000073 C1 E7 08                        	SAL	EDI,8
    60 00000076 50                              	PUSH	EAX
    61 00000077 68 000001F6                     	PUSH	502
    62 0000007C E8 [00000000]                   	CALL	_io_out8
    63 00000081 6A 20                           	PUSH	32
    64 00000083 68 000001F7                     	PUSH	503
    65 00000088 E8 [00000000]                   	CALL	_io_out8
    66 0000008D 6A 00                           	PUSH	0
    67 0000008F 68 000001F7                     	PUSH	503
    68 00000094 E8 00000144                     	CALL	_WaitForDrq
    69 00000099 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
    70 0000009C C7 45 10 000001F0               	MOV	DWORD [16+EBP],496
    71 000000A3 89 7D 0C                        	MOV	DWORD [12+EBP],EDI
    72 000000A6 89 45 08                        	MOV	DWORD [8+EBP],EAX
    73 000000A9 83 C4 18                        	ADD	ESP,24
    74 000000AC 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    75 000000AF 5B                              	POP	EBX
    76 000000B0 5E                              	POP	ESI
    77 000000B1 5F                              	POP	EDI
    78 000000B2 5D                              	POP	EBP
    79 000000B3 E9 [00000000]                   	JMP	_inws
    80 000000B8                                 L4:
    81 000000B8 0D 000000F0                     	OR	EAX,240
    82 000000BD EB B4                           	JMP	L3
    83 000000BF                                 	GLOBAL	_writehddisk
    84 000000BF                                 _writehddisk:
    85 000000BF 55                              	PUSH	EBP
    86 000000C0 89 E5                           	MOV	EBP,ESP
    87 000000C2 57                              	PUSH	EDI
    88 000000C3 56                              	PUSH	ESI
    89 000000C4 53                              	PUSH	EBX
    90 000000C5 52                              	PUSH	EDX
    91 000000C6 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
    92 000000C9 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
    93 000000CC 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    94 000000CF 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
    95 000000D2 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
    96 000000D5 6A 00                           	PUSH	0
    97 000000D7 68 000001F7                     	PUSH	503
    98 000000DC E8 000000CA                     	CALL	_WaitForBsy
    99 000000E1 6A 00                           	PUSH	0
   100 000000E3 68 000001F7                     	PUSH	503
   101 000000E8 E8 00000091                     	CALL	_WaitForRdy
   102 000000ED 57                              	PUSH	EDI
   103 000000EE 68 000001F2                     	PUSH	498
   104 000000F3 E8 [00000000]                   	CALL	_io_out8
   105 000000F8 53                              	PUSH	EBX
   106 000000F9 C1 FB 08                        	SAR	EBX,8
   107 000000FC 68 000001F3                     	PUSH	499
   108 00000101 E8 [00000000]                   	CALL	_io_out8
   109 00000106 83 C4 20                        	ADD	ESP,32
   110 00000109 53                              	PUSH	EBX
   111 0000010A C1 FB 08                        	SAR	EBX,8
   112 0000010D 68 000001F4                     	PUSH	500
   113 00000112 E8 [00000000]                   	CALL	_io_out8
   114 00000117 53                              	PUSH	EBX
   115 00000118 68 000001F5                     	PUSH	501
   116 0000011D E8 [00000000]                   	CALL	_io_out8
   117 00000122 83 C4 10                        	ADD	ESP,16
   118 00000125 89 D8                           	MOV	EAX,EBX
   119 00000127 C1 F8 08                        	SAR	EAX,8
   120 0000012A 4E                              	DEC	ESI
   121 0000012B 74 4A                           	JE	L8
   122 0000012D 0D 000000E0                     	OR	EAX,224
   123 00000132                                 L7:
   124 00000132 C1 E7 08                        	SAL	EDI,8
   125 00000135 50                              	PUSH	EAX
   126 00000136 68 000001F6                     	PUSH	502
   127 0000013B E8 [00000000]                   	CALL	_io_out8
   128 00000140 6A 40                           	PUSH	64
   129 00000142 68 000001F7                     	PUSH	503
   130 00000147 E8 [00000000]                   	CALL	_io_out8
   131 0000014C 6A 00                           	PUSH	0
   132 0000014E 68 000001F7                     	PUSH	503
   133 00000153 E8 00000085                     	CALL	_WaitForDrq
   134 00000158 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   135 0000015B C7 45 10 000001F0               	MOV	DWORD [16+EBP],496
   136 00000162 89 7D 0C                        	MOV	DWORD [12+EBP],EDI
   137 00000165 89 45 08                        	MOV	DWORD [8+EBP],EAX
   138 00000168 83 C4 18                        	ADD	ESP,24
   139 0000016B 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   140 0000016E 5B                              	POP	EBX
   141 0000016F 5E                              	POP	ESI
   142 00000170 5F                              	POP	EDI
   143 00000171 5D                              	POP	EBP
   144 00000172 E9 [00000000]                   	JMP	_outws
   145 00000177                                 L8:
   146 00000177 0D 000000F0                     	OR	EAX,240
   147 0000017C EB B4                           	JMP	L7
   148 0000017E                                 	GLOBAL	_WaitForRdy
   149 0000017E                                 _WaitForRdy:
   150 0000017E 55                              	PUSH	EBP
   151 0000017F 89 E5                           	MOV	EBP,ESP
   152 00000181 56                              	PUSH	ESI
   153 00000182 53                              	PUSH	EBX
   154 00000183 BB 00010000                     	MOV	EBX,65536
   155 00000188 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   156 0000018B                                 L15:
   157 0000018B 0F B7 C6                        	MOVZX	EAX,SI
   158 0000018E 50                              	PUSH	EAX
   159 0000018F E8 [00000000]                   	CALL	_io_in8
   160 00000194 59                              	POP	ECX
   161 00000195 83 E0 40                        	AND	EAX,64
   162 00000198 84 C0                           	TEST	AL,AL
   163 0000019A 75 03                           	JNE	L11
   164 0000019C 4B                              	DEC	EBX
   165 0000019D 75 EC                           	JNE	L15
   166 0000019F                                 L11:
   167 0000019F 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   168 000001A2 B8 00000001                     	MOV	EAX,1
   169 000001A7 5B                              	POP	EBX
   170 000001A8 5E                              	POP	ESI
   171 000001A9 5D                              	POP	EBP
   172 000001AA C3                              	RET
   173 000001AB                                 	GLOBAL	_WaitForBsy
   174 000001AB                                 _WaitForBsy:
   175 000001AB 55                              	PUSH	EBP
   176 000001AC 89 E5                           	MOV	EBP,ESP
   177 000001AE 57                              	PUSH	EDI
   178 000001AF 56                              	PUSH	ESI
   179 000001B0 31 FF                           	XOR	EDI,EDI
   180 000001B2 53                              	PUSH	EBX
   181 000001B3 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   182 000001B6 BB 00010000                     	MOV	EBX,65536
   183 000001BB                                 L22:
   184 000001BB 0F B7 C6                        	MOVZX	EAX,SI
   185 000001BE 50                              	PUSH	EAX
   186 000001BF E8 [00000000]                   	CALL	_io_in8
   187 000001C4 5A                              	POP	EDX
   188 000001C5 84 C0                           	TEST	AL,AL
   189 000001C7 79 0D                           	JNS	L23
   190 000001C9 4B                              	DEC	EBX
   191 000001CA 75 EF                           	JNE	L22
   192 000001CC                                 L18:
   193 000001CC 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   194 000001CF 89 F8                           	MOV	EAX,EDI
   195 000001D1 5B                              	POP	EBX
   196 000001D2 5E                              	POP	ESI
   197 000001D3 5F                              	POP	EDI
   198 000001D4 5D                              	POP	EBP
   199 000001D5 C3                              	RET
   200 000001D6                                 L23:
   201 000001D6 BF 00000001                     	MOV	EDI,1
   202 000001DB EB EF                           	JMP	L18
   203 000001DD                                 	GLOBAL	_WaitForDrq
   204 000001DD                                 _WaitForDrq:
   205 000001DD 55                              	PUSH	EBP
   206 000001DE 89 E5                           	MOV	EBP,ESP
   207 000001E0 57                              	PUSH	EDI
   208 000001E1 56                              	PUSH	ESI
   209 000001E2 31 FF                           	XOR	EDI,EDI
   210 000001E4 53                              	PUSH	EBX
   211 000001E5 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   212 000001E8 BB 00010000                     	MOV	EBX,65536
   213 000001ED                                 L30:
   214 000001ED 0F B7 C6                        	MOVZX	EAX,SI
   215 000001F0 50                              	PUSH	EAX
   216 000001F1 E8 [00000000]                   	CALL	_io_in8
   217 000001F6 59                              	POP	ECX
   218 000001F7 83 E0 08                        	AND	EAX,8
   219 000001FA 84 C0                           	TEST	AL,AL
   220 000001FC 75 0D                           	JNE	L31
   221 000001FE 4B                              	DEC	EBX
   222 000001FF 75 EC                           	JNE	L30
   223 00000201                                 L26:
   224 00000201 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   225 00000204 89 F8                           	MOV	EAX,EDI
   226 00000206 5B                              	POP	EBX
   227 00000207 5E                              	POP	ESI
   228 00000208 5F                              	POP	EDI
   229 00000209 5D                              	POP	EBP
   230 0000020A C3                              	RET
   231 0000020B                                 L31:
   232 0000020B BF 00000001                     	MOV	EDI,1
   233 00000210 EB EF                           	JMP	L26
   234 00000212                                 	GLOBAL	_identify_hd
   235 00000212                                 _identify_hd:
   236 00000212 55                              	PUSH	EBP
   237 00000213 89 E5                           	MOV	EBP,ESP
   238 00000215 6A 00                           	PUSH	0
   239 00000217 68 000001F7                     	PUSH	503
   240 0000021C E8 FFFFFF8A                     	CALL	_WaitForBsy
   241 00000221 6A 00                           	PUSH	0
   242 00000223 68 000001F7                     	PUSH	503
   243 00000228 E8 FFFFFF51                     	CALL	_WaitForRdy
   244 0000022D B8 000000F0                     	MOV	EAX,240
   245 00000232 83 7D 08 01                     	CMP	DWORD [8+EBP],1
   246 00000236 74 05                           	JE	L36
   247 00000238 B8 000000E0                     	MOV	EAX,224
   248 0000023D                                 L36:
   249 0000023D 50                              	PUSH	EAX
   250 0000023E 68 000001F6                     	PUSH	502
   251 00000243 E8 [00000000]                   	CALL	_io_out8
   252 00000248 68 000000EC                     	PUSH	236
   253 0000024D 68 000001F7                     	PUSH	503
   254 00000252 E8 [00000000]                   	CALL	_io_out8
   255 00000257 83 C4 20                        	ADD	ESP,32
   256 0000025A 6A 00                           	PUSH	0
   257 0000025C 68 000001F7                     	PUSH	503
   258 00000261 E8 FFFFFF77                     	CALL	_WaitForDrq
   259 00000266 68 000001F0                     	PUSH	496
   260 0000026B 68 00000200                     	PUSH	512
   261 00000270 FF 75 0C                        	PUSH	DWORD [12+EBP]
   262 00000273 E8 [00000000]                   	CALL	_inws
   263 00000278 C9                              	LEAVE
   264 00000279 C3                              	RET
   265 0000027A                                 	GLOBAL	_task_hd
   266 0000027A                                 _task_hd:
   267 0000027A 55                              	PUSH	EBP
   268 0000027B 89 E5                           	MOV	EBP,ESP
   269 0000027D 53                              	PUSH	EBX
   270 0000027E 83 EC 20                        	SUB	ESP,32
   271 00000281                                 L57:
   272 00000281 8D 5D DC                        	LEA	EBX,DWORD [-36+EBP]
   273 00000284 53                              	PUSH	EBX
   274 00000285 68 00002710                     	PUSH	10000
   275 0000028A E8 [00000000]                   	CALL	_message_receive
   276 0000028F 58                              	POP	EAX
   277 00000290 8B 45 DC                        	MOV	EAX,DWORD [-36+EBP]
   278 00000293 8B 55 EC                        	MOV	EDX,DWORD [-20+EBP]
   279 00000296 59                              	POP	ECX
   280 00000297 83 F8 02                        	CMP	EAX,2
   281 0000029A 75 3C                           	JNE	L62
   282 0000029C 83 7A 08 02                     	CMP	DWORD [8+EDX],2
   283 000002A0                                 L61:
   284 000002A0 75 22                           	JNE	L53
   285 000002A2 8A 42 10                        	MOV	AL,BYTE [16+EDX]
   286 000002A5 83 E0 01                        	AND	EAX,1
   287 000002A8 84 C0                           	TEST	AL,AL
   288 000002AA 74 18                           	JE	L53
   289 000002AC FF 75 E4                        	PUSH	DWORD [-28+EBP]
   290 000002AF 6A 00                           	PUSH	0
   291 000002B1 E8 FFFFFF5C                     	CALL	_identify_hd
   292 000002B6 53                              	PUSH	EBX
   293 000002B7 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   294 000002BA E8 [00000000]                   	CALL	_message_send
   295 000002BF 83 C4 10                        	ADD	ESP,16
   296 000002C2 EB BD                           	JMP	L57
   297 000002C4                                 L53:
   298 000002C4 53                              	PUSH	EBX
   299 000002C5 C7 45 E4 00000000               	MOV	DWORD [-28+EBP],0
   300 000002CC                                 L58:
   301 000002CC FF 75 E8                        	PUSH	DWORD [-24+EBP]
   302 000002CF E8 [00000000]                   	CALL	_message_send
   303 000002D4 5B                              	POP	EBX
   304 000002D5 58                              	POP	EAX
   305 000002D6 EB A9                           	JMP	L57
   306 000002D8                                 L62:
   307 000002D8 83 F8 02                        	CMP	EAX,2
   308 000002DB 0F 8E 00000083                  	JLE	L63
   309 000002E1 83 F8 03                        	CMP	EAX,3
   310 000002E4 75 3C                           	JNE	L64
   311 000002E6 83 7A 08 03                     	CMP	DWORD [8+EDX],3
   312 000002EA 75 D8                           	JNE	L53
   313 000002EC 8A 42 10                        	MOV	AL,BYTE [16+EDX]
   314 000002EF 83 E0 01                        	AND	EAX,1
   315 000002F2 84 C0                           	TEST	AL,AL
   316 000002F4 74 CE                           	JE	L53
   317 000002F6 FF 75 E4                        	PUSH	DWORD [-28+EBP]
   318 000002F9 FF 72 04                        	PUSH	DWORD [4+EDX]
   319 000002FC FF 72 0C                        	PUSH	DWORD [12+EDX]
   320 000002FF 8A 42 10                        	MOV	AL,BYTE [16+EDX]
   321 00000302 C1 E0 06                        	SAL	EAX,6
   322 00000305 C0 F8 07                        	SAR	AL,7
   323 00000308 0F BE C0                        	MOVSX	EAX,AL
   324 0000030B 50                              	PUSH	EAX
   325 0000030C E8 FFFFFCEF                     	CALL	_readhddisk
   326 00000311                                 L59:
   327 00000311 53                              	PUSH	EBX
   328 00000312 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   329 00000315 E8 [00000000]                   	CALL	_message_send
   330 0000031A 83 C4 18                        	ADD	ESP,24
   331 0000031D E9 FFFFFF5F                     	JMP	L57
   332 00000322                                 L64:
   333 00000322 83 F8 04                        	CMP	EAX,4
   334 00000325 75 2D                           	JNE	L54
   335 00000327 83 7A 08 04                     	CMP	DWORD [8+EDX],4
   336 0000032B 75 97                           	JNE	L53
   337 0000032D 8A 42 10                        	MOV	AL,BYTE [16+EDX]
   338 00000330 83 E0 01                        	AND	EAX,1
   339 00000333 84 C0                           	TEST	AL,AL
   340 00000335 74 8D                           	JE	L53
   341 00000337 FF 75 E4                        	PUSH	DWORD [-28+EBP]
   342 0000033A FF 72 04                        	PUSH	DWORD [4+EDX]
   343 0000033D FF 72 0C                        	PUSH	DWORD [12+EDX]
   344 00000340 8A 42 10                        	MOV	AL,BYTE [16+EDX]
   345 00000343 C1 E0 06                        	SAL	EAX,6
   346 00000346 C0 F8 07                        	SAR	AL,7
   347 00000349 0F BE C0                        	MOVSX	EAX,AL
   348 0000034C 50                              	PUSH	EAX
   349 0000034D E8 FFFFFD6D                     	CALL	_writehddisk
   350 00000352 EB BD                           	JMP	L59
   351 00000354                                 L54:
   352 00000354 8D 45 DC                        	LEA	EAX,DWORD [-36+EBP]
   353 00000357 C7 45 E4 00000000               	MOV	DWORD [-28+EBP],0
   354 0000035E 50                              	PUSH	EAX
   355 0000035F E9 FFFFFF68                     	JMP	L58
   356 00000364                                 L63:
   357 00000364 48                              	DEC	EAX
   358 00000365 75 ED                           	JNE	L54
   359 00000367 83 7A 08 01                     	CMP	DWORD [8+EDX],1
   360 0000036B E9 FFFFFF30                     	JMP	L61
   361 00000370                                 	GLOBAL	_IdeInitialize
   362 00000370                                 _IdeInitialize:
   363 00000370 55                              	PUSH	EBP
   364 00000371 89 E5                           	MOV	EBP,ESP
   365 00000373 6A 00                           	PUSH	0
   366 00000375 68 000001F7                     	PUSH	503
   367 0000037A E8 FFFFFE2C                     	CALL	_WaitForBsy
   368 0000037F 6A 00                           	PUSH	0
   369 00000381 68 000001F7                     	PUSH	503
   370 00000386 E8 FFFFFDF3                     	CALL	_WaitForRdy
   371 0000038B 68 000003F6                     	PUSH	1014
   372 00000390 6A 0E                           	PUSH	14
   373 00000392 E8 [00000000]                   	CALL	_io_out8
   374 00000397 6A 00                           	PUSH	0
   375 00000399 68 000001F7                     	PUSH	503
   376 0000039E E8 FFFFFE08                     	CALL	_WaitForBsy
   377 000003A3 83 C4 20                        	ADD	ESP,32
   378 000003A6 6A 00                           	PUSH	0
   379 000003A8 68 000001F7                     	PUSH	503
   380 000003AD E8 FFFFFDCC                     	CALL	_WaitForRdy
   381 000003B2 B8 00000001                     	MOV	EAX,1
   382 000003B7 C9                              	LEAVE
   383 000003B8 C3                              	RET
   384 000003B9                                 	GLOBAL	_inthandler2e
   385 000003B9                                 _inthandler2e:
   386 000003B9 55                              	PUSH	EBP
   387 000003BA 89 E5                           	MOV	EBP,ESP
   388 000003BC 6A 66                           	PUSH	102
   389 000003BE 68 000000A0                     	PUSH	160
   390 000003C3 E8 [00000000]                   	CALL	_io_out8
   391 000003C8 6A 62                           	PUSH	98
   392 000003CA 6A 20                           	PUSH	32
   393 000003CC E8 [00000000]                   	CALL	_io_out8
   394 000003D1 83 C4 10                        	ADD	ESP,16
   395 000003D4 C7 45 08 000001F7               	MOV	DWORD [8+EBP],503
   396 000003DB C9                              	LEAVE
   397 000003DC E9 [00000000]                   	JMP	_io_in8
   398 000003E1                                 	GLOBAL	_HDEntry
   399 000003E1                                 _HDEntry:
   400 000003E1 55                              	PUSH	EBP
   401 000003E2 89 E5                           	MOV	EBP,ESP
   402 000003E4 56                              	PUSH	ESI
   403 000003E5 53                              	PUSH	EBX
   404 000003E6 83 EC 10                        	SUB	ESP,16
   405 000003E9 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   406 000003EC E8 [00000000]                   	CALL	_task_alloc
   407 000003F1 68 00010000                     	PUSH	65536
   408 000003F6 89 C3                           	MOV	EBX,EAX
   409 000003F8 FF 76 04                        	PUSH	DWORD [4+ESI]
   410 000003FB E8 [00000000]                   	CALL	_memman_alloc_4k
   411 00000400 05 00010000                     	ADD	EAX,65536
   412 00000405 89 43 64                        	MOV	DWORD [100+EBX],EAX
   413 00000408 C7 43 4C [0000027A]             	MOV	DWORD [76+EBX],_task_hd
   414 0000040F C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   415 00000416 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   416 0000041D C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   417 00000424 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   418 0000042E C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   419 00000438 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   420 00000442 C7 83 00000148 00000001         	MOV	DWORD [328+EBX],1
   421 0000044C 6A 01                           	PUSH	1
   422 0000044E 6A 02                           	PUSH	2
   423 00000450 53                              	PUSH	EBX
   424 00000451 E8 [00000000]                   	CALL	_task_run
   425 00000456 8D 45 E8                        	LEA	EAX,DWORD [-24+EBP]
   426 00000459 89 5E 08                        	MOV	DWORD [8+ESI],EBX
   427 0000045C A3 [00000000]                   	MOV	DWORD [_devcalls],EAX
   428 00000461 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   429 00000464 B8 00000001                     	MOV	EAX,1
   430 00000469 5B                              	POP	EBX
   431 0000046A 5E                              	POP	ESI
   432 0000046B 5D                              	POP	EBP
   433 0000046C C3                              	RET
