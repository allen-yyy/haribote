     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_in8
     7 00000000                                 	EXTERN	_io_out8
     8 00000000                                 	EXTERN	_inws
     9 00000000                                 	EXTERN	_io_cli
    10 00000000                                 	EXTERN	_boxfill8
    11 00000000                                 	EXTERN	_sprintf
    12 00000000                                 	EXTERN	_putfonts8_asc
    13 00000000                                 	EXTERN	_message_receive
    14 00000000                                 	EXTERN	_message_send
    15 00000000                                 	EXTERN	_task_alloc
    16 00000000                                 	EXTERN	_memman_alloc_4k
    17 00000000                                 	EXTERN	_task_run
    18 00000000                                 [FILE "hd.c"]
    19                                          [SECTION .text]
    20 00000000                                 _WaitForRdy:
    21 00000000 55                              	PUSH	EBP
    22 00000001 89 E5                           	MOV	EBP,ESP
    23 00000003 56                              	PUSH	ESI
    24 00000004 53                              	PUSH	EBX
    25 00000005 BB 00010000                     	MOV	EBX,65536
    26 0000000A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    27 0000000D                                 L7:
    28 0000000D 0F B7 C6                        	MOVZX	EAX,SI
    29 00000010 50                              	PUSH	EAX
    30 00000011 E8 [00000000]                   	CALL	_io_in8
    31 00000016 5A                              	POP	EDX
    32 00000017 83 E0 40                        	AND	EAX,64
    33 0000001A 84 C0                           	TEST	AL,AL
    34 0000001C 75 03                           	JNE	L3
    35 0000001E 4B                              	DEC	EBX
    36 0000001F 75 EC                           	JNE	L7
    37 00000021                                 L3:
    38 00000021 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    39 00000024 B8 00000001                     	MOV	EAX,1
    40 00000029 5B                              	POP	EBX
    41 0000002A 5E                              	POP	ESI
    42 0000002B 5D                              	POP	EBP
    43 0000002C C3                              	RET
    44 0000002D                                 _WaitForBsy:
    45 0000002D 55                              	PUSH	EBP
    46 0000002E 89 E5                           	MOV	EBP,ESP
    47 00000030 57                              	PUSH	EDI
    48 00000031 56                              	PUSH	ESI
    49 00000032 31 FF                           	XOR	EDI,EDI
    50 00000034 53                              	PUSH	EBX
    51 00000035 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    52 00000038 BB 00010000                     	MOV	EBX,65536
    53 0000003D                                 L14:
    54 0000003D 0F B7 C6                        	MOVZX	EAX,SI
    55 00000040 50                              	PUSH	EAX
    56 00000041 E8 [00000000]                   	CALL	_io_in8
    57 00000046 59                              	POP	ECX
    58 00000047 84 C0                           	TEST	AL,AL
    59 00000049 79 0D                           	JNS	L15
    60 0000004B 4B                              	DEC	EBX
    61 0000004C 75 EF                           	JNE	L14
    62 0000004E                                 L10:
    63 0000004E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    64 00000051 89 F8                           	MOV	EAX,EDI
    65 00000053 5B                              	POP	EBX
    66 00000054 5E                              	POP	ESI
    67 00000055 5F                              	POP	EDI
    68 00000056 5D                              	POP	EBP
    69 00000057 C3                              	RET
    70 00000058                                 L15:
    71 00000058 BF 00000001                     	MOV	EDI,1
    72 0000005D EB EF                           	JMP	L10
    73 0000005F                                 _WaitForDrq:
    74 0000005F 55                              	PUSH	EBP
    75 00000060 89 E5                           	MOV	EBP,ESP
    76 00000062 57                              	PUSH	EDI
    77 00000063 56                              	PUSH	ESI
    78 00000064 31 FF                           	XOR	EDI,EDI
    79 00000066 53                              	PUSH	EBX
    80 00000067 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    81 0000006A BB 00010000                     	MOV	EBX,65536
    82 0000006F                                 L22:
    83 0000006F 0F B7 C6                        	MOVZX	EAX,SI
    84 00000072 50                              	PUSH	EAX
    85 00000073 E8 [00000000]                   	CALL	_io_in8
    86 00000078 5A                              	POP	EDX
    87 00000079 83 E0 08                        	AND	EAX,8
    88 0000007C 84 C0                           	TEST	AL,AL
    89 0000007E 75 0D                           	JNE	L23
    90 00000080 4B                              	DEC	EBX
    91 00000081 75 EC                           	JNE	L22
    92 00000083                                 L18:
    93 00000083 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    94 00000086 89 F8                           	MOV	EAX,EDI
    95 00000088 5B                              	POP	EBX
    96 00000089 5E                              	POP	ESI
    97 0000008A 5F                              	POP	EDI
    98 0000008B 5D                              	POP	EBP
    99 0000008C C3                              	RET
   100 0000008D                                 L23:
   101 0000008D BF 00000001                     	MOV	EDI,1
   102 00000092 EB EF                           	JMP	L18
   103 00000094                                 _CmdSucc:
   104 00000094 55                              	PUSH	EBP
   105 00000095 89 E5                           	MOV	EBP,ESP
   106 00000097 0F B7 45 08                     	MOVZX	EAX,WORD [8+EBP]
   107 0000009B 50                              	PUSH	EAX
   108 0000009C E8 [00000000]                   	CALL	_io_in8
   109 000000A1 59                              	POP	ECX
   110 000000A2 0F BE C0                        	MOVSX	EAX,AL
   111 000000A5 F7 D0                           	NOT	EAX
   112 000000A7 83 E0 01                        	AND	EAX,1
   113 000000AA 0F 95 C0                        	SETNE	AL
   114 000000AD 0F B6 C0                        	MOVZX	EAX,AL
   115 000000B0 C9                              	LEAVE
   116 000000B1 C3                              	RET
   117 000000B2                                 	GLOBAL	_Identify
   118 000000B2                                 _Identify:
   119 000000B2 55                              	PUSH	EBP
   120 000000B3 31 C0                           	XOR	EAX,EAX
   121 000000B5 89 E5                           	MOV	EBP,ESP
   122 000000B7 53                              	PUSH	EBX
   123 000000B8 31 DB                           	XOR	EBX,EBX
   124 000000BA 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   125 000000BD 83 FA 01                        	CMP	EDX,1
   126 000000C0 7F 6E                           	JG	L26
   127 000000C2 4A                              	DEC	EDX
   128 000000C3 74 70                           	JE	L30
   129 000000C5                                 L28:
   130 000000C5 6A 00                           	PUSH	0
   131 000000C7 68 000001F7                     	PUSH	503
   132 000000CC E8 FFFFFF5C                     	CALL	_WaitForBsy
   133 000000D1 6A 00                           	PUSH	0
   134 000000D3 68 000001F7                     	PUSH	503
   135 000000D8 E8 FFFFFF23                     	CALL	_WaitForRdy
   136 000000DD 68 000001F6                     	PUSH	502
   137 000000E2 0F BE C3                        	MOVSX	EAX,BL
   138 000000E5 50                              	PUSH	EAX
   139 000000E6 E8 [00000000]                   	CALL	_io_out8
   140 000000EB 68 000001F7                     	PUSH	503
   141 000000F0 68 000000EC                     	PUSH	236
   142 000000F5 E8 [00000000]                   	CALL	_io_out8
   143 000000FA 83 C4 20                        	ADD	ESP,32
   144 000000FD 6A 00                           	PUSH	0
   145 000000FF 68 000001F7                     	PUSH	503
   146 00000104 E8 FFFFFF56                     	CALL	_WaitForDrq
   147 00000109 68 000001F0                     	PUSH	496
   148 0000010E 68 00000200                     	PUSH	512
   149 00000113 FF 75 0C                        	PUSH	DWORD [12+EBP]
   150 00000116 E8 [00000000]                   	CALL	_inws
   151 0000011B 68 000001F7                     	PUSH	503
   152 00000120 E8 FFFFFF6F                     	CALL	_CmdSucc
   153 00000125 83 C4 18                        	ADD	ESP,24
   154 00000128 85 C0                           	TEST	EAX,EAX
   155 0000012A 0F 95 C0                        	SETNE	AL
   156 0000012D 0F B6 C0                        	MOVZX	EAX,AL
   157 00000130                                 L26:
   158 00000130 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   159 00000133 C9                              	LEAVE
   160 00000134 C3                              	RET
   161 00000135                                 L30:
   162 00000135 B3 10                           	MOV	BL,16
   163 00000137 EB 8C                           	JMP	L28
   164                                          [SECTION .data]
   165 00000000                                 LC0:
   166 00000000 74 61 73 6B 72 75 6E 20 25 64   	DB	"taskrun %d",0x00
       0000000A 00 
   167                                          [SECTION .text]
   168 00000139                                 	GLOBAL	_task_hd
   169 00000139                                 _task_hd:
   170 00000139 55                              	PUSH	EBP
   171 0000013A 89 E5                           	MOV	EBP,ESP
   172 0000013C 57                              	PUSH	EDI
   173 0000013D 56                              	PUSH	ESI
   174 0000013E 31 FF                           	XOR	EDI,EDI
   175 00000140 53                              	PUSH	EBX
   176 00000141 83 EC 20                        	SUB	ESP,32
   177 00000144 E8 [00000000]                   	CALL	_io_cli
   178 00000149                                 L32:
   179 00000149 6A 0F                           	PUSH	15
   180 0000014B 47                              	INC	EDI
   181 0000014C 68 000000FF                     	PUSH	255
   182 00000151 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
   183 00000154 6A 00                           	PUSH	0
   184 00000156 6A 00                           	PUSH	0
   185 00000158 6A 00                           	PUSH	0
   186 0000015A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   187 00000161 50                              	PUSH	EAX
   188 00000162 FF 35 00000FF8                  	PUSH	DWORD [4088]
   189 00000168 E8 [00000000]                   	CALL	_boxfill8
   190 0000016D 57                              	PUSH	EDI
   191 0000016E 68 [00000000]                   	PUSH	LC0
   192 00000173 53                              	PUSH	EBX
   193 00000174 E8 [00000000]                   	CALL	_sprintf
   194 00000179 83 C4 28                        	ADD	ESP,40
   195 0000017C 53                              	PUSH	EBX
   196 0000017D 6A 07                           	PUSH	7
   197 0000017F 6A 00                           	PUSH	0
   198 00000181 6A 00                           	PUSH	0
   199 00000183 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   200 0000018A 50                              	PUSH	EAX
   201 0000018B FF 35 00000FF8                  	PUSH	DWORD [4088]
   202 00000191 E8 [00000000]                   	CALL	_putfonts8_asc
   203 00000196 56                              	PUSH	ESI
   204 00000197 68 00002710                     	PUSH	10000
   205 0000019C E8 [00000000]                   	CALL	_message_receive
   206 000001A1 83 C4 20                        	ADD	ESP,32
   207 000001A4 83 3E 01                        	CMP	DWORD [ESI],1
   208 000001A7 74 14                           	JE	L39
   209 000001A9                                 L37:
   210 000001A9 C7 46 08 00000000               	MOV	DWORD [8+ESI],0
   211 000001B0 56                              	PUSH	ESI
   212 000001B1 FF 76 0C                        	PUSH	DWORD [12+ESI]
   213 000001B4 E8 [00000000]                   	CALL	_message_send
   214 000001B9 5B                              	POP	EBX
   215 000001BA 58                              	POP	EAX
   216 000001BB EB 8C                           	JMP	L32
   217 000001BD                                 L39:
   218 000001BD FF 76 08                        	PUSH	DWORD [8+ESI]
   219 000001C0 6A 00                           	PUSH	0
   220 000001C2 E8 FFFFFEEB                     	CALL	_Identify
   221 000001C7 56                              	PUSH	ESI
   222 000001C8 FF 76 0C                        	PUSH	DWORD [12+ESI]
   223 000001CB E8 [00000000]                   	CALL	_message_send
   224 000001D0 83 C4 10                        	ADD	ESP,16
   225 000001D3 EB D4                           	JMP	L37
   226 000001D5                                 	GLOBAL	_IdeInitialize
   227 000001D5                                 _IdeInitialize:
   228 000001D5 55                              	PUSH	EBP
   229 000001D6 89 E5                           	MOV	EBP,ESP
   230 000001D8 6A 00                           	PUSH	0
   231 000001DA 68 000001F7                     	PUSH	503
   232 000001DF E8 FFFFFE49                     	CALL	_WaitForBsy
   233 000001E4 6A 00                           	PUSH	0
   234 000001E6 68 000001F7                     	PUSH	503
   235 000001EB E8 FFFFFE10                     	CALL	_WaitForRdy
   236 000001F0 68 000003F6                     	PUSH	1014
   237 000001F5 6A 0E                           	PUSH	14
   238 000001F7 E8 [00000000]                   	CALL	_io_out8
   239 000001FC 6A 00                           	PUSH	0
   240 000001FE 68 000001F7                     	PUSH	503
   241 00000203 E8 FFFFFE25                     	CALL	_WaitForBsy
   242 00000208 83 C4 20                        	ADD	ESP,32
   243 0000020B 6A 00                           	PUSH	0
   244 0000020D 68 000001F7                     	PUSH	503
   245 00000212 E8 FFFFFDE9                     	CALL	_WaitForRdy
   246 00000217 B8 00000001                     	MOV	EAX,1
   247 0000021C C9                              	LEAVE
   248 0000021D C3                              	RET
   249 0000021E                                 	GLOBAL	_inthandler2e
   250 0000021E                                 _inthandler2e:
   251 0000021E 55                              	PUSH	EBP
   252 0000021F 89 E5                           	MOV	EBP,ESP
   253 00000221 6A 66                           	PUSH	102
   254 00000223 68 000000A0                     	PUSH	160
   255 00000228 E8 [00000000]                   	CALL	_io_out8
   256 0000022D 6A 62                           	PUSH	98
   257 0000022F 6A 20                           	PUSH	32
   258 00000231 E8 [00000000]                   	CALL	_io_out8
   259 00000236 C9                              	LEAVE
   260 00000237 C3                              	RET
   261 00000238                                 	GLOBAL	_HDEntry
   262 00000238                                 _HDEntry:
   263 00000238 55                              	PUSH	EBP
   264 00000239 89 E5                           	MOV	EBP,ESP
   265 0000023B 53                              	PUSH	EBX
   266 0000023C 81 EC 00000220                  	SUB	ESP,544
   267 00000242 8D 85 FFFFFDDC                  	LEA	EAX,DWORD [-548+EBP]
   268 00000248 50                              	PUSH	EAX
   269 00000249 6A 00                           	PUSH	0
   270 0000024B E8 FFFFFE62                     	CALL	_Identify
   271 00000250 E8 [00000000]                   	CALL	_task_alloc
   272 00000255 68 00010000                     	PUSH	65536
   273 0000025A 89 C3                           	MOV	EBX,EAX
   274 0000025C 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   275 0000025F FF 70 04                        	PUSH	DWORD [4+EAX]
   276 00000262 E8 [00000000]                   	CALL	_memman_alloc_4k
   277 00000267 05 00010000                     	ADD	EAX,65536
   278 0000026C 89 43 64                        	MOV	DWORD [100+EBX],EAX
   279 0000026F C7 43 4C [00000139]             	MOV	DWORD [76+EBX],_task_hd
   280 00000276 C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   281 0000027D C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   282 00000284 C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   283 0000028B C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   284 00000295 C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   285 0000029F C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   286 000002A9 6A 01                           	PUSH	1
   287 000002AB 6A 04                           	PUSH	4
   288 000002AD 53                              	PUSH	EBX
   289 000002AE E8 [00000000]                   	CALL	_task_run
   290 000002B3 B8 00000001                     	MOV	EAX,1
   291 000002B8 89 1D 00000F01                  	MOV	DWORD [3841],EBX
   292 000002BE 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   293 000002C1 C9                              	LEAVE
   294 000002C2 C3                              	RET
