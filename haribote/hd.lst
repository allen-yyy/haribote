     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_in8
     7 00000000                                 	EXTERN	_io_out8
     8 00000000                                 	EXTERN	_inws
     9 00000000                                 	EXTERN	_message_receive
    10 00000000                                 	EXTERN	_message_send
    11 00000000                                 	EXTERN	_task_alloc
    12 00000000                                 	EXTERN	_memman_alloc_4k
    13 00000000                                 	EXTERN	_task_run
    14 00000000                                 [FILE "hd.c"]
    15                                          [SECTION .text]
    16 00000000                                 _WaitForRdy:
    17 00000000 55                              	PUSH	EBP
    18 00000001 89 E5                           	MOV	EBP,ESP
    19 00000003 56                              	PUSH	ESI
    20 00000004 53                              	PUSH	EBX
    21 00000005 BB 00010000                     	MOV	EBX,65536
    22 0000000A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    23 0000000D                                 L7:
    24 0000000D 0F B7 C6                        	MOVZX	EAX,SI
    25 00000010 50                              	PUSH	EAX
    26 00000011 E8 [00000000]                   	CALL	_io_in8
    27 00000016 5A                              	POP	EDX
    28 00000017 83 E0 40                        	AND	EAX,64
    29 0000001A 84 C0                           	TEST	AL,AL
    30 0000001C 75 03                           	JNE	L3
    31 0000001E 4B                              	DEC	EBX
    32 0000001F 75 EC                           	JNE	L7
    33 00000021                                 L3:
    34 00000021 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    35 00000024 B8 00000001                     	MOV	EAX,1
    36 00000029 5B                              	POP	EBX
    37 0000002A 5E                              	POP	ESI
    38 0000002B 5D                              	POP	EBP
    39 0000002C C3                              	RET
    40 0000002D                                 _WaitForBsy:
    41 0000002D 55                              	PUSH	EBP
    42 0000002E 89 E5                           	MOV	EBP,ESP
    43 00000030 57                              	PUSH	EDI
    44 00000031 56                              	PUSH	ESI
    45 00000032 31 FF                           	XOR	EDI,EDI
    46 00000034 53                              	PUSH	EBX
    47 00000035 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    48 00000038 BB 00010000                     	MOV	EBX,65536
    49 0000003D                                 L14:
    50 0000003D 0F B7 C6                        	MOVZX	EAX,SI
    51 00000040 50                              	PUSH	EAX
    52 00000041 E8 [00000000]                   	CALL	_io_in8
    53 00000046 59                              	POP	ECX
    54 00000047 84 C0                           	TEST	AL,AL
    55 00000049 79 0D                           	JNS	L15
    56 0000004B 4B                              	DEC	EBX
    57 0000004C 75 EF                           	JNE	L14
    58 0000004E                                 L10:
    59 0000004E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    60 00000051 89 F8                           	MOV	EAX,EDI
    61 00000053 5B                              	POP	EBX
    62 00000054 5E                              	POP	ESI
    63 00000055 5F                              	POP	EDI
    64 00000056 5D                              	POP	EBP
    65 00000057 C3                              	RET
    66 00000058                                 L15:
    67 00000058 BF 00000001                     	MOV	EDI,1
    68 0000005D EB EF                           	JMP	L10
    69 0000005F                                 _WaitForDrq:
    70 0000005F 55                              	PUSH	EBP
    71 00000060 89 E5                           	MOV	EBP,ESP
    72 00000062 57                              	PUSH	EDI
    73 00000063 56                              	PUSH	ESI
    74 00000064 31 FF                           	XOR	EDI,EDI
    75 00000066 53                              	PUSH	EBX
    76 00000067 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
    77 0000006A BB 00010000                     	MOV	EBX,65536
    78 0000006F                                 L22:
    79 0000006F 0F B7 C6                        	MOVZX	EAX,SI
    80 00000072 50                              	PUSH	EAX
    81 00000073 E8 [00000000]                   	CALL	_io_in8
    82 00000078 5A                              	POP	EDX
    83 00000079 83 E0 08                        	AND	EAX,8
    84 0000007C 84 C0                           	TEST	AL,AL
    85 0000007E 75 0D                           	JNE	L23
    86 00000080 4B                              	DEC	EBX
    87 00000081 75 EC                           	JNE	L22
    88 00000083                                 L18:
    89 00000083 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    90 00000086 89 F8                           	MOV	EAX,EDI
    91 00000088 5B                              	POP	EBX
    92 00000089 5E                              	POP	ESI
    93 0000008A 5F                              	POP	EDI
    94 0000008B 5D                              	POP	EBP
    95 0000008C C3                              	RET
    96 0000008D                                 L23:
    97 0000008D BF 00000001                     	MOV	EDI,1
    98 00000092 EB EF                           	JMP	L18
    99 00000094                                 _CmdSucc:
   100 00000094 55                              	PUSH	EBP
   101 00000095 89 E5                           	MOV	EBP,ESP
   102 00000097 0F B7 45 08                     	MOVZX	EAX,WORD [8+EBP]
   103 0000009B 50                              	PUSH	EAX
   104 0000009C E8 [00000000]                   	CALL	_io_in8
   105 000000A1 59                              	POP	ECX
   106 000000A2 0F BE C0                        	MOVSX	EAX,AL
   107 000000A5 F7 D0                           	NOT	EAX
   108 000000A7 83 E0 01                        	AND	EAX,1
   109 000000AA 0F 95 C0                        	SETNE	AL
   110 000000AD 0F B6 C0                        	MOVZX	EAX,AL
   111 000000B0 C9                              	LEAVE
   112 000000B1 C3                              	RET
   113 000000B2                                 	GLOBAL	_Identify
   114 000000B2                                 _Identify:
   115 000000B2 55                              	PUSH	EBP
   116 000000B3 31 C0                           	XOR	EAX,EAX
   117 000000B5 89 E5                           	MOV	EBP,ESP
   118 000000B7 53                              	PUSH	EBX
   119 000000B8 31 DB                           	XOR	EBX,EBX
   120 000000BA 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   121 000000BD 83 FA 01                        	CMP	EDX,1
   122 000000C0 7F 6E                           	JG	L26
   123 000000C2 4A                              	DEC	EDX
   124 000000C3 74 70                           	JE	L30
   125 000000C5                                 L28:
   126 000000C5 6A 00                           	PUSH	0
   127 000000C7 68 000001F7                     	PUSH	503
   128 000000CC E8 FFFFFF5C                     	CALL	_WaitForBsy
   129 000000D1 6A 00                           	PUSH	0
   130 000000D3 68 000001F7                     	PUSH	503
   131 000000D8 E8 FFFFFF23                     	CALL	_WaitForRdy
   132 000000DD 68 000001F6                     	PUSH	502
   133 000000E2 0F BE C3                        	MOVSX	EAX,BL
   134 000000E5 50                              	PUSH	EAX
   135 000000E6 E8 [00000000]                   	CALL	_io_out8
   136 000000EB 68 000001F7                     	PUSH	503
   137 000000F0 68 000000EC                     	PUSH	236
   138 000000F5 E8 [00000000]                   	CALL	_io_out8
   139 000000FA 83 C4 20                        	ADD	ESP,32
   140 000000FD 6A 00                           	PUSH	0
   141 000000FF 68 000001F7                     	PUSH	503
   142 00000104 E8 FFFFFF56                     	CALL	_WaitForDrq
   143 00000109 68 000001F0                     	PUSH	496
   144 0000010E 68 00000200                     	PUSH	512
   145 00000113 FF 75 0C                        	PUSH	DWORD [12+EBP]
   146 00000116 E8 [00000000]                   	CALL	_inws
   147 0000011B 68 000001F7                     	PUSH	503
   148 00000120 E8 FFFFFF6F                     	CALL	_CmdSucc
   149 00000125 83 C4 18                        	ADD	ESP,24
   150 00000128 85 C0                           	TEST	EAX,EAX
   151 0000012A 0F 95 C0                        	SETNE	AL
   152 0000012D 0F B6 C0                        	MOVZX	EAX,AL
   153 00000130                                 L26:
   154 00000130 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   155 00000133 C9                              	LEAVE
   156 00000134 C3                              	RET
   157 00000135                                 L30:
   158 00000135 B3 10                           	MOV	BL,16
   159 00000137 EB 8C                           	JMP	L28
   160 00000139                                 	GLOBAL	_task_hd
   161 00000139                                 _task_hd:
   162 00000139 55                              	PUSH	EBP
   163 0000013A 89 E5                           	MOV	EBP,ESP
   164 0000013C 53                              	PUSH	EBX
   165 0000013D                                 L32:
   166 0000013D 53                              	PUSH	EBX
   167 0000013E 68 00002710                     	PUSH	10000
   168 00000143 E8 [00000000]                   	CALL	_message_receive
   169 00000148 83 3B 01                        	CMP	DWORD [EBX],1
   170 0000014B 59                              	POP	ECX
   171 0000014C 58                              	POP	EAX
   172 0000014D 74 14                           	JE	L39
   173 0000014F                                 L37:
   174 0000014F C7 43 08 00000000               	MOV	DWORD [8+EBX],0
   175 00000156 53                              	PUSH	EBX
   176 00000157 FF 73 0C                        	PUSH	DWORD [12+EBX]
   177 0000015A E8 [00000000]                   	CALL	_message_send
   178 0000015F 58                              	POP	EAX
   179 00000160 5A                              	POP	EDX
   180 00000161 EB DA                           	JMP	L32
   181 00000163                                 L39:
   182 00000163 FF 73 08                        	PUSH	DWORD [8+EBX]
   183 00000166 6A 00                           	PUSH	0
   184 00000168 E8 FFFFFF45                     	CALL	_Identify
   185 0000016D 53                              	PUSH	EBX
   186 0000016E FF 73 0C                        	PUSH	DWORD [12+EBX]
   187 00000171 E8 [00000000]                   	CALL	_message_send
   188 00000176 83 C4 10                        	ADD	ESP,16
   189 00000179 EB D4                           	JMP	L37
   190 0000017B                                 	GLOBAL	_IdeInitialize
   191 0000017B                                 _IdeInitialize:
   192 0000017B 55                              	PUSH	EBP
   193 0000017C 89 E5                           	MOV	EBP,ESP
   194 0000017E 6A 00                           	PUSH	0
   195 00000180 68 000001F7                     	PUSH	503
   196 00000185 E8 FFFFFEA3                     	CALL	_WaitForBsy
   197 0000018A 6A 00                           	PUSH	0
   198 0000018C 68 000001F7                     	PUSH	503
   199 00000191 E8 FFFFFE6A                     	CALL	_WaitForRdy
   200 00000196 68 000003F6                     	PUSH	1014
   201 0000019B 6A 0E                           	PUSH	14
   202 0000019D E8 [00000000]                   	CALL	_io_out8
   203 000001A2 6A 00                           	PUSH	0
   204 000001A4 68 000001F7                     	PUSH	503
   205 000001A9 E8 FFFFFE7F                     	CALL	_WaitForBsy
   206 000001AE 83 C4 20                        	ADD	ESP,32
   207 000001B1 6A 00                           	PUSH	0
   208 000001B3 68 000001F7                     	PUSH	503
   209 000001B8 E8 FFFFFE43                     	CALL	_WaitForRdy
   210 000001BD B8 00000001                     	MOV	EAX,1
   211 000001C2 C9                              	LEAVE
   212 000001C3 C3                              	RET
   213 000001C4                                 	GLOBAL	_inthandler2e
   214 000001C4                                 _inthandler2e:
   215 000001C4 55                              	PUSH	EBP
   216 000001C5 89 E5                           	MOV	EBP,ESP
   217 000001C7 6A 66                           	PUSH	102
   218 000001C9 68 000000A0                     	PUSH	160
   219 000001CE E8 [00000000]                   	CALL	_io_out8
   220 000001D3 6A 62                           	PUSH	98
   221 000001D5 6A 20                           	PUSH	32
   222 000001D7 E8 [00000000]                   	CALL	_io_out8
   223 000001DC C9                              	LEAVE
   224 000001DD C3                              	RET
   225 000001DE                                 	GLOBAL	_HDEntry
   226 000001DE                                 _HDEntry:
   227 000001DE 55                              	PUSH	EBP
   228 000001DF 89 E5                           	MOV	EBP,ESP
   229 000001E1 56                              	PUSH	ESI
   230 000001E2 53                              	PUSH	EBX
   231 000001E3 81 EC 00000200                  	SUB	ESP,512
   232 000001E9 8D 85 FFFFFDF8                  	LEA	EAX,DWORD [-520+EBP]
   233 000001EF 8B 35 00000EF0                  	MOV	ESI,DWORD [3824]
   234 000001F5 50                              	PUSH	EAX
   235 000001F6 6A 00                           	PUSH	0
   236 000001F8 E8 FFFFFEB5                     	CALL	_Identify
   237 000001FD E8 [00000000]                   	CALL	_task_alloc
   238 00000202 68 00010000                     	PUSH	65536
   239 00000207 56                              	PUSH	ESI
   240 00000208 89 C3                           	MOV	EBX,EAX
   241 0000020A E8 [00000000]                   	CALL	_memman_alloc_4k
   242 0000020F 05 00010000                     	ADD	EAX,65536
   243 00000214 89 43 64                        	MOV	DWORD [100+EBX],EAX
   244 00000217 C7 43 4C [00000139]             	MOV	DWORD [76+EBX],_task_hd
   245 0000021E C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   246 00000225 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   247 0000022C C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   248 00000233 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   249 0000023D C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   250 00000247 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   251 00000251 6A 01                           	PUSH	1
   252 00000253 6A 03                           	PUSH	3
   253 00000255 53                              	PUSH	EBX
   254 00000256 E8 [00000000]                   	CALL	_task_run
   255 0000025B B8 00000001                     	MOV	EAX,1
   256 00000260 89 1D 00000F01                  	MOV	DWORD [3841],EBX
   257 00000266 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   258 00000269 5B                              	POP	EBX
   259 0000026A 5E                              	POP	ESI
   260 0000026B 5D                              	POP	EBP
   261 0000026C C3                              	RET
