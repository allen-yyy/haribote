     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_WriteByteToPort
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_ReadWordStringFromPort
     9 00000000                                 	EXTERN	_WriteWordStringToPort
    10 00000000                                 	EXTERN	_io_out8
    11 00000000                                 	EXTERN	_inws
    12 00000000                                 	EXTERN	_message_receive
    13 00000000                                 	EXTERN	_message_send
    14 00000000                                 	EXTERN	_task_alloc
    15 00000000                                 	EXTERN	_memman_alloc_4k
    16 00000000                                 	EXTERN	_task_run
    17 00000000                                 [FILE "hd.c"]
    18                                          [SECTION .text]
    19 00000000                                 	GLOBAL	_ReadHDSector
    20 00000000                                 _ReadHDSector:
    21 00000000 55                              	PUSH	EBP
    22 00000001 89 E5                           	MOV	EBP,ESP
    23 00000003 57                              	PUSH	EDI
    24 00000004 56                              	PUSH	ESI
    25 00000005 31 F6                           	XOR	ESI,ESI
    26 00000007 53                              	PUSH	EBX
    27 00000008 51                              	PUSH	ECX
    28 00000009 8A 45 10                        	MOV	AL,BYTE [16+EBP]
    29 0000000C 8A 55 14                        	MOV	DL,BYTE [20+EBP]
    30 0000000F 88 45 F3                        	MOV	BYTE [-13+EBP],AL
    31 00000012 88 55 F2                        	MOV	BYTE [-14+EBP],DL
    32 00000015 31 C0                           	XOR	EAX,EAX
    33 00000017 8A 5D 18                        	MOV	BL,BYTE [24+EBP]
    34 0000001A 0F B6 7D 0C                     	MOVZX	EDI,BYTE [12+EBP]
    35 0000001E 83 7D 08 00                     	CMP	DWORD [8+EBP],0
    36 00000022 74 07                           	JE	L1
    37 00000024 31 C0                           	XOR	EAX,EAX
    38 00000026 80 FB 1F                        	CMP	BL,31
    39 00000029 76 08                           	JBE	L23
    40 0000002B                                 L1:
    41 0000002B 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    42 0000002E 5B                              	POP	EBX
    43 0000002F 5E                              	POP	ESI
    44 00000030 5F                              	POP	EDI
    45 00000031 5D                              	POP	EBP
    46 00000032 C3                              	RET
    47 00000033                                 L23:
    48 00000033 68 000003F6                     	PUSH	1014
    49 00000038 6A 00                           	PUSH	0
    50 0000003A E8 [00000000]                   	CALL	_WriteByteToPort
    51 0000003F 58                              	POP	EAX
    52 00000040 5A                              	POP	EDX
    53 00000041                                 L9:
    54 00000041 68 000001F7                     	PUSH	503
    55 00000046 E8 [00000000]                   	CALL	_io_in8
    56 0000004B 59                              	POP	ECX
    57 0000004C 84 C0                           	TEST	AL,AL
    58 0000004E 78 07                           	JS	L8
    59 00000050 83 E0 40                        	AND	EAX,64
    60 00000053 84 C0                           	TEST	AL,AL
    61 00000055 75 0A                           	JNE	L5
    62 00000057                                 L8:
    63 00000057 46                              	INC	ESI
    64 00000058 83 FE FF                        	CMP	ESI,-1
    65 0000005B 75 E4                           	JNE	L9
    66 0000005D                                 L14:
    67 0000005D 31 C0                           	XOR	EAX,EAX
    68 0000005F EB CA                           	JMP	L1
    69 00000061                                 L5:
    70 00000061 46                              	INC	ESI
    71 00000062 74 F9                           	JE	L14
    72 00000064 88 D8                           	MOV	AL,BL
    73 00000066 83 E0 10                        	AND	EAX,16
    74 00000069 0F B6 C0                        	MOVZX	EAX,AL
    75 0000006C 85 C0                           	TEST	EAX,EAX
    76 0000006E 0F 84 00000099                  	JE	L12
    77 00000074 83 F8 10                        	CMP	EAX,16
    78 00000077 75 E4                           	JNE	L14
    79 00000079 83 CB F0                        	OR	EBX,-16
    80 0000007C                                 L11:
    81 0000007C 68 000001F1                     	PUSH	497
    82 00000081 6A 4B                           	PUSH	75
    83 00000083 E8 [00000000]                   	CALL	_WriteByteToPort
    84 00000088 68 000001F2                     	PUSH	498
    85 0000008D 6A 01                           	PUSH	1
    86 0000008F E8 [00000000]                   	CALL	_WriteByteToPort
    87 00000094 89 FA                           	MOV	EDX,EDI
    88 00000096 0F B6 C2                        	MOVZX	EAX,DL
    89 00000099 68 000001F3                     	PUSH	499
    90 0000009E 50                              	PUSH	EAX
    91 0000009F E8 [00000000]                   	CALL	_WriteByteToPort
    92 000000A4 68 000001F4                     	PUSH	500
    93 000000A9 0F B6 45 F3                     	MOVZX	EAX,BYTE [-13+EBP]
    94 000000AD 50                              	PUSH	EAX
    95 000000AE E8 [00000000]                   	CALL	_WriteByteToPort
    96 000000B3 83 C4 20                        	ADD	ESP,32
    97 000000B6 0F B6 45 F2                     	MOVZX	EAX,BYTE [-14+EBP]
    98 000000BA 68 000001F5                     	PUSH	501
    99 000000BF 50                              	PUSH	EAX
   100 000000C0 E8 [00000000]                   	CALL	_WriteByteToPort
   101 000000C5 68 000001F6                     	PUSH	502
   102 000000CA 0F B6 C3                        	MOVZX	EAX,BL
   103 000000CD 50                              	PUSH	EAX
   104 000000CE E8 [00000000]                   	CALL	_WriteByteToPort
   105 000000D3 68 000001F7                     	PUSH	503
   106 000000D8 6A 20                           	PUSH	32
   107 000000DA E8 [00000000]                   	CALL	_WriteByteToPort
   108 000000DF 83 C4 18                        	ADD	ESP,24
   109 000000E2                                 L20:
   110 000000E2 68 000001F7                     	PUSH	503
   111 000000E7 E8 [00000000]                   	CALL	_io_in8
   112 000000EC 5A                              	POP	EDX
   113 000000ED 84 C0                           	TEST	AL,AL
   114 000000EF 78 F1                           	JS	L20
   115 000000F1 68 000001F0                     	PUSH	496
   116 000000F6 68 00000200                     	PUSH	512
   117 000000FB FF 75 08                        	PUSH	DWORD [8+EBP]
   118 000000FE E8 [00000000]                   	CALL	_ReadWordStringFromPort
   119 00000103 B8 00000001                     	MOV	EAX,1
   120 00000108 E9 FFFFFF1E                     	JMP	L1
   121 0000010D                                 L12:
   122 0000010D 83 E3 0F                        	AND	EBX,15
   123 00000110 83 EB 20                        	SUB	EBX,32
   124 00000113 E9 FFFFFF64                     	JMP	L11
   125 00000118                                 	GLOBAL	_WriteHDSector
   126 00000118                                 _WriteHDSector:
   127 00000118 55                              	PUSH	EBP
   128 00000119 89 E5                           	MOV	EBP,ESP
   129 0000011B 57                              	PUSH	EDI
   130 0000011C 56                              	PUSH	ESI
   131 0000011D 31 F6                           	XOR	ESI,ESI
   132 0000011F 53                              	PUSH	EBX
   133 00000120 50                              	PUSH	EAX
   134 00000121 8A 45 10                        	MOV	AL,BYTE [16+EBP]
   135 00000124 8A 55 14                        	MOV	DL,BYTE [20+EBP]
   136 00000127 88 45 F3                        	MOV	BYTE [-13+EBP],AL
   137 0000012A 88 55 F2                        	MOV	BYTE [-14+EBP],DL
   138 0000012D 31 C0                           	XOR	EAX,EAX
   139 0000012F 8A 5D 18                        	MOV	BL,BYTE [24+EBP]
   140 00000132 0F B6 7D 0C                     	MOVZX	EDI,BYTE [12+EBP]
   141 00000136 83 7D 08 00                     	CMP	DWORD [8+EBP],0
   142 0000013A 74 07                           	JE	L24
   143 0000013C 31 C0                           	XOR	EAX,EAX
   144 0000013E 80 FB 1F                        	CMP	BL,31
   145 00000141 76 08                           	JBE	L46
   146 00000143                                 L24:
   147 00000143 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   148 00000146 5B                              	POP	EBX
   149 00000147 5E                              	POP	ESI
   150 00000148 5F                              	POP	EDI
   151 00000149 5D                              	POP	EBP
   152 0000014A C3                              	RET
   153 0000014B                                 L46:
   154 0000014B 68 000003F6                     	PUSH	1014
   155 00000150 6A 00                           	PUSH	0
   156 00000152 E8 [00000000]                   	CALL	_WriteByteToPort
   157 00000157 59                              	POP	ECX
   158 00000158 58                              	POP	EAX
   159 00000159                                 L32:
   160 00000159 68 000001F7                     	PUSH	503
   161 0000015E E8 [00000000]                   	CALL	_io_in8
   162 00000163 5A                              	POP	EDX
   163 00000164 84 C0                           	TEST	AL,AL
   164 00000166 78 07                           	JS	L31
   165 00000168 83 E0 40                        	AND	EAX,64
   166 0000016B 84 C0                           	TEST	AL,AL
   167 0000016D 75 0A                           	JNE	L28
   168 0000016F                                 L31:
   169 0000016F 46                              	INC	ESI
   170 00000170 83 FE FF                        	CMP	ESI,-1
   171 00000173 75 E4                           	JNE	L32
   172 00000175                                 L37:
   173 00000175 31 C0                           	XOR	EAX,EAX
   174 00000177 EB CA                           	JMP	L24
   175 00000179                                 L28:
   176 00000179 46                              	INC	ESI
   177 0000017A 74 F9                           	JE	L37
   178 0000017C 88 D8                           	MOV	AL,BL
   179 0000017E 83 E0 10                        	AND	EAX,16
   180 00000181 0F B6 C0                        	MOVZX	EAX,AL
   181 00000184 85 C0                           	TEST	EAX,EAX
   182 00000186 0F 84 00000099                  	JE	L35
   183 0000018C 83 F8 10                        	CMP	EAX,16
   184 0000018F 75 E4                           	JNE	L37
   185 00000191 83 CB F0                        	OR	EBX,-16
   186 00000194                                 L34:
   187 00000194 68 000001F1                     	PUSH	497
   188 00000199 6A 4B                           	PUSH	75
   189 0000019B E8 [00000000]                   	CALL	_WriteByteToPort
   190 000001A0 68 000001F2                     	PUSH	498
   191 000001A5 6A 01                           	PUSH	1
   192 000001A7 E8 [00000000]                   	CALL	_WriteByteToPort
   193 000001AC 89 FA                           	MOV	EDX,EDI
   194 000001AE 0F B6 C2                        	MOVZX	EAX,DL
   195 000001B1 68 000001F3                     	PUSH	499
   196 000001B6 50                              	PUSH	EAX
   197 000001B7 E8 [00000000]                   	CALL	_WriteByteToPort
   198 000001BC 68 000001F4                     	PUSH	500
   199 000001C1 0F B6 45 F3                     	MOVZX	EAX,BYTE [-13+EBP]
   200 000001C5 50                              	PUSH	EAX
   201 000001C6 E8 [00000000]                   	CALL	_WriteByteToPort
   202 000001CB 83 C4 20                        	ADD	ESP,32
   203 000001CE 0F B6 45 F2                     	MOVZX	EAX,BYTE [-14+EBP]
   204 000001D2 68 000001F5                     	PUSH	501
   205 000001D7 50                              	PUSH	EAX
   206 000001D8 E8 [00000000]                   	CALL	_WriteByteToPort
   207 000001DD 68 000001F6                     	PUSH	502
   208 000001E2 0F B6 C3                        	MOVZX	EAX,BL
   209 000001E5 50                              	PUSH	EAX
   210 000001E6 E8 [00000000]                   	CALL	_WriteByteToPort
   211 000001EB 68 000001F7                     	PUSH	503
   212 000001F0 6A 30                           	PUSH	48
   213 000001F2 E8 [00000000]                   	CALL	_WriteByteToPort
   214 000001F7 83 C4 18                        	ADD	ESP,24
   215 000001FA                                 L43:
   216 000001FA 68 000001F7                     	PUSH	503
   217 000001FF E8 [00000000]                   	CALL	_io_in8
   218 00000204 5B                              	POP	EBX
   219 00000205 84 C0                           	TEST	AL,AL
   220 00000207 78 F1                           	JS	L43
   221 00000209 68 000001F0                     	PUSH	496
   222 0000020E 68 00000200                     	PUSH	512
   223 00000213 FF 75 08                        	PUSH	DWORD [8+EBP]
   224 00000216 E8 [00000000]                   	CALL	_WriteWordStringToPort
   225 0000021B B8 00000001                     	MOV	EAX,1
   226 00000220 E9 FFFFFF1E                     	JMP	L24
   227 00000225                                 L35:
   228 00000225 83 E3 0F                        	AND	EBX,15
   229 00000228 83 EB 20                        	SUB	EBX,32
   230 0000022B E9 FFFFFF64                     	JMP	L34
   231 00000230                                 _WaitForRdy:
   232 00000230 55                              	PUSH	EBP
   233 00000231 89 E5                           	MOV	EBP,ESP
   234 00000233 56                              	PUSH	ESI
   235 00000234 53                              	PUSH	EBX
   236 00000235 BB 00010000                     	MOV	EBX,65536
   237 0000023A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   238 0000023D                                 L53:
   239 0000023D 0F B7 C6                        	MOVZX	EAX,SI
   240 00000240 50                              	PUSH	EAX
   241 00000241 E8 [00000000]                   	CALL	_io_in8
   242 00000246 5A                              	POP	EDX
   243 00000247 83 E0 40                        	AND	EAX,64
   244 0000024A 84 C0                           	TEST	AL,AL
   245 0000024C 75 03                           	JNE	L49
   246 0000024E 4B                              	DEC	EBX
   247 0000024F 75 EC                           	JNE	L53
   248 00000251                                 L49:
   249 00000251 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   250 00000254 B8 00000001                     	MOV	EAX,1
   251 00000259 5B                              	POP	EBX
   252 0000025A 5E                              	POP	ESI
   253 0000025B 5D                              	POP	EBP
   254 0000025C C3                              	RET
   255 0000025D                                 _WaitForBsy:
   256 0000025D 55                              	PUSH	EBP
   257 0000025E 89 E5                           	MOV	EBP,ESP
   258 00000260 57                              	PUSH	EDI
   259 00000261 56                              	PUSH	ESI
   260 00000262 31 FF                           	XOR	EDI,EDI
   261 00000264 53                              	PUSH	EBX
   262 00000265 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   263 00000268 BB 00010000                     	MOV	EBX,65536
   264 0000026D                                 L60:
   265 0000026D 0F B7 C6                        	MOVZX	EAX,SI
   266 00000270 50                              	PUSH	EAX
   267 00000271 E8 [00000000]                   	CALL	_io_in8
   268 00000276 59                              	POP	ECX
   269 00000277 84 C0                           	TEST	AL,AL
   270 00000279 79 0D                           	JNS	L61
   271 0000027B 4B                              	DEC	EBX
   272 0000027C 75 EF                           	JNE	L60
   273 0000027E                                 L56:
   274 0000027E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   275 00000281 89 F8                           	MOV	EAX,EDI
   276 00000283 5B                              	POP	EBX
   277 00000284 5E                              	POP	ESI
   278 00000285 5F                              	POP	EDI
   279 00000286 5D                              	POP	EBP
   280 00000287 C3                              	RET
   281 00000288                                 L61:
   282 00000288 BF 00000001                     	MOV	EDI,1
   283 0000028D EB EF                           	JMP	L56
   284 0000028F                                 _WaitForDrq:
   285 0000028F 55                              	PUSH	EBP
   286 00000290 89 E5                           	MOV	EBP,ESP
   287 00000292 57                              	PUSH	EDI
   288 00000293 56                              	PUSH	ESI
   289 00000294 31 FF                           	XOR	EDI,EDI
   290 00000296 53                              	PUSH	EBX
   291 00000297 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   292 0000029A BB 00010000                     	MOV	EBX,65536
   293 0000029F                                 L68:
   294 0000029F 0F B7 C6                        	MOVZX	EAX,SI
   295 000002A2 50                              	PUSH	EAX
   296 000002A3 E8 [00000000]                   	CALL	_io_in8
   297 000002A8 5A                              	POP	EDX
   298 000002A9 83 E0 08                        	AND	EAX,8
   299 000002AC 84 C0                           	TEST	AL,AL
   300 000002AE 75 0D                           	JNE	L69
   301 000002B0 4B                              	DEC	EBX
   302 000002B1 75 EC                           	JNE	L68
   303 000002B3                                 L64:
   304 000002B3 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   305 000002B6 89 F8                           	MOV	EAX,EDI
   306 000002B8 5B                              	POP	EBX
   307 000002B9 5E                              	POP	ESI
   308 000002BA 5F                              	POP	EDI
   309 000002BB 5D                              	POP	EBP
   310 000002BC C3                              	RET
   311 000002BD                                 L69:
   312 000002BD BF 00000001                     	MOV	EDI,1
   313 000002C2 EB EF                           	JMP	L64
   314 000002C4                                 _CmdSucc:
   315 000002C4 55                              	PUSH	EBP
   316 000002C5 89 E5                           	MOV	EBP,ESP
   317 000002C7 0F B7 45 08                     	MOVZX	EAX,WORD [8+EBP]
   318 000002CB 50                              	PUSH	EAX
   319 000002CC E8 [00000000]                   	CALL	_io_in8
   320 000002D1 59                              	POP	ECX
   321 000002D2 0F BE C0                        	MOVSX	EAX,AL
   322 000002D5 F7 D0                           	NOT	EAX
   323 000002D7 83 E0 01                        	AND	EAX,1
   324 000002DA 0F 95 C0                        	SETNE	AL
   325 000002DD 0F B6 C0                        	MOVZX	EAX,AL
   326 000002E0 C9                              	LEAVE
   327 000002E1 C3                              	RET
   328 000002E2                                 	GLOBAL	_Identify
   329 000002E2                                 _Identify:
   330 000002E2 55                              	PUSH	EBP
   331 000002E3 31 C0                           	XOR	EAX,EAX
   332 000002E5 89 E5                           	MOV	EBP,ESP
   333 000002E7 53                              	PUSH	EBX
   334 000002E8 31 DB                           	XOR	EBX,EBX
   335 000002EA 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   336 000002ED 83 FA 01                        	CMP	EDX,1
   337 000002F0 7F 6E                           	JG	L72
   338 000002F2 4A                              	DEC	EDX
   339 000002F3 74 70                           	JE	L76
   340 000002F5                                 L74:
   341 000002F5 6A 00                           	PUSH	0
   342 000002F7 68 000001F7                     	PUSH	503
   343 000002FC E8 FFFFFF5C                     	CALL	_WaitForBsy
   344 00000301 6A 00                           	PUSH	0
   345 00000303 68 000001F7                     	PUSH	503
   346 00000308 E8 FFFFFF23                     	CALL	_WaitForRdy
   347 0000030D 0F BE C3                        	MOVSX	EAX,BL
   348 00000310 50                              	PUSH	EAX
   349 00000311 68 000001F6                     	PUSH	502
   350 00000316 E8 [00000000]                   	CALL	_io_out8
   351 0000031B 68 000000EC                     	PUSH	236
   352 00000320 68 000001F7                     	PUSH	503
   353 00000325 E8 [00000000]                   	CALL	_io_out8
   354 0000032A 83 C4 20                        	ADD	ESP,32
   355 0000032D 6A 00                           	PUSH	0
   356 0000032F 68 000001F7                     	PUSH	503
   357 00000334 E8 FFFFFF56                     	CALL	_WaitForDrq
   358 00000339 68 000001F0                     	PUSH	496
   359 0000033E 68 00000200                     	PUSH	512
   360 00000343 FF 75 0C                        	PUSH	DWORD [12+EBP]
   361 00000346 E8 [00000000]                   	CALL	_inws
   362 0000034B 68 000001F7                     	PUSH	503
   363 00000350 E8 FFFFFF6F                     	CALL	_CmdSucc
   364 00000355 83 C4 18                        	ADD	ESP,24
   365 00000358 85 C0                           	TEST	EAX,EAX
   366 0000035A 0F 95 C0                        	SETNE	AL
   367 0000035D 0F B6 C0                        	MOVZX	EAX,AL
   368 00000360                                 L72:
   369 00000360 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   370 00000363 C9                              	LEAVE
   371 00000364 C3                              	RET
   372 00000365                                 L76:
   373 00000365 B3 10                           	MOV	BL,16
   374 00000367 EB 8C                           	JMP	L74
   375 00000369                                 	GLOBAL	_task_hd
   376 00000369                                 _task_hd:
   377 00000369 55                              	PUSH	EBP
   378 0000036A 89 E5                           	MOV	EBP,ESP
   379 0000036C 83 EC 10                        	SUB	ESP,16
   380 0000036F                                 L78:
   381 0000036F FF 75 FC                        	PUSH	DWORD [-4+EBP]
   382 00000372 FF 75 F8                        	PUSH	DWORD [-8+EBP]
   383 00000375 FF 75 F4                        	PUSH	DWORD [-12+EBP]
   384 00000378 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   385 0000037B 68 00002710                     	PUSH	10000
   386 00000380 E8 [00000000]                   	CALL	_message_receive
   387 00000385 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   388 00000388 83 C4 14                        	ADD	ESP,20
   389 0000038B 83 F8 01                        	CMP	EAX,1
   390 0000038E 75 1B                           	JNE	L86
   391 00000390                                 L83:
   392 00000390 FF 75 F8                        	PUSH	DWORD [-8+EBP]
   393 00000393 6A 00                           	PUSH	0
   394 00000395 E8 FFFFFF48                     	CALL	_Identify
   395 0000039A 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   396 0000039D 50                              	PUSH	EAX
   397 0000039E FF 75 FC                        	PUSH	DWORD [-4+EBP]
   398 000003A1 E8 [00000000]                   	CALL	_message_send
   399 000003A6 83 C4 10                        	ADD	ESP,16
   400 000003A9 EB C4                           	JMP	L78
   401 000003AB                                 L86:
   402 000003AB 83 F8 02                        	CMP	EAX,2
   403 000003AE 74 E0                           	JE	L83
   404 000003B0 8D 45 F0                        	LEA	EAX,DWORD [-16+EBP]
   405 000003B3 50                              	PUSH	EAX
   406 000003B4 FF 75 FC                        	PUSH	DWORD [-4+EBP]
   407 000003B7 C7 45 F8 00000000               	MOV	DWORD [-8+EBP],0
   408 000003BE E8 [00000000]                   	CALL	_message_send
   409 000003C3 58                              	POP	EAX
   410 000003C4 5A                              	POP	EDX
   411 000003C5 EB A8                           	JMP	L78
   412 000003C7                                 	GLOBAL	_IdeInitialize
   413 000003C7                                 _IdeInitialize:
   414 000003C7 55                              	PUSH	EBP
   415 000003C8 89 E5                           	MOV	EBP,ESP
   416 000003CA 6A 00                           	PUSH	0
   417 000003CC 68 000001F7                     	PUSH	503
   418 000003D1 E8 FFFFFE87                     	CALL	_WaitForBsy
   419 000003D6 6A 00                           	PUSH	0
   420 000003D8 68 000001F7                     	PUSH	503
   421 000003DD E8 FFFFFE4E                     	CALL	_WaitForRdy
   422 000003E2 68 000003F6                     	PUSH	1014
   423 000003E7 6A 0E                           	PUSH	14
   424 000003E9 E8 [00000000]                   	CALL	_io_out8
   425 000003EE 6A 00                           	PUSH	0
   426 000003F0 68 000001F7                     	PUSH	503
   427 000003F5 E8 FFFFFE63                     	CALL	_WaitForBsy
   428 000003FA 83 C4 20                        	ADD	ESP,32
   429 000003FD 6A 00                           	PUSH	0
   430 000003FF 68 000001F7                     	PUSH	503
   431 00000404 E8 FFFFFE27                     	CALL	_WaitForRdy
   432 00000409 B8 00000001                     	MOV	EAX,1
   433 0000040E C9                              	LEAVE
   434 0000040F C3                              	RET
   435 00000410                                 	GLOBAL	_inthandler2e
   436 00000410                                 _inthandler2e:
   437 00000410 55                              	PUSH	EBP
   438 00000411 89 E5                           	MOV	EBP,ESP
   439 00000413 6A 66                           	PUSH	102
   440 00000415 68 000000A0                     	PUSH	160
   441 0000041A E8 [00000000]                   	CALL	_io_out8
   442 0000041F 6A 62                           	PUSH	98
   443 00000421 6A 20                           	PUSH	32
   444 00000423 E8 [00000000]                   	CALL	_io_out8
   445 00000428 C9                              	LEAVE
   446 00000429 C3                              	RET
   447 0000042A                                 	GLOBAL	_HDEntry
   448 0000042A                                 _HDEntry:
   449 0000042A 55                              	PUSH	EBP
   450 0000042B 89 E5                           	MOV	EBP,ESP
   451 0000042D 56                              	PUSH	ESI
   452 0000042E 53                              	PUSH	EBX
   453 0000042F 81 EC 00000220                  	SUB	ESP,544
   454 00000435 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   455 00000438 E8 [00000000]                   	CALL	_task_alloc
   456 0000043D 68 00010000                     	PUSH	65536
   457 00000442 89 C3                           	MOV	EBX,EAX
   458 00000444 FF 76 04                        	PUSH	DWORD [4+ESI]
   459 00000447 E8 [00000000]                   	CALL	_memman_alloc_4k
   460 0000044C 05 00010000                     	ADD	EAX,65536
   461 00000451 89 43 64                        	MOV	DWORD [100+EBX],EAX
   462 00000454 C7 43 4C [00000369]             	MOV	DWORD [76+EBX],_task_hd
   463 0000045B C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   464 00000462 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   465 00000469 C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   466 00000470 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   467 0000047A C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   468 00000484 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   469 0000048E 6A 01                           	PUSH	1
   470 00000490 6A 02                           	PUSH	2
   471 00000492 53                              	PUSH	EBX
   472 00000493 E8 [00000000]                   	CALL	_task_run
   473 00000498 B8 00000001                     	MOV	EAX,1
   474 0000049D 89 5E 08                        	MOV	DWORD [8+ESI],EBX
   475 000004A0 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   476 000004A3 5B                              	POP	EBX
   477 000004A4 5E                              	POP	ESI
   478 000004A5 5D                              	POP	EBP
   479 000004A6 C3                              	RET
