     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_WriteByteToPort
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_ReadWordStringFromPort
     9 00000000                                 	EXTERN	_WriteWordStringToPort
    10 00000000                                 	EXTERN	_io_out8
    11 00000000                                 	EXTERN	_inws
    12 00000000                                 	EXTERN	_io_cli
    13 00000000                                 	EXTERN	_message_receive
    14 00000000                                 	EXTERN	_boxfill8
    15 00000000                                 	EXTERN	_sprintf
    16 00000000                                 	EXTERN	_putfonts8_asc
    17 00000000                                 	EXTERN	_message_send
    18 00000000                                 	EXTERN	_task_alloc
    19 00000000                                 	EXTERN	_memman_alloc_4k
    20 00000000                                 	EXTERN	_task_run
    21 00000000                                 [FILE "hd.c"]
    22                                          [SECTION .text]
    23 00000000                                 	GLOBAL	_ReadHDSector
    24 00000000                                 _ReadHDSector:
    25 00000000 55                              	PUSH	EBP
    26 00000001 89 E5                           	MOV	EBP,ESP
    27 00000003 57                              	PUSH	EDI
    28 00000004 56                              	PUSH	ESI
    29 00000005 31 F6                           	XOR	ESI,ESI
    30 00000007 53                              	PUSH	EBX
    31 00000008 51                              	PUSH	ECX
    32 00000009 8A 45 10                        	MOV	AL,BYTE [16+EBP]
    33 0000000C 8A 55 14                        	MOV	DL,BYTE [20+EBP]
    34 0000000F 88 45 F3                        	MOV	BYTE [-13+EBP],AL
    35 00000012 88 55 F2                        	MOV	BYTE [-14+EBP],DL
    36 00000015 31 C0                           	XOR	EAX,EAX
    37 00000017 8A 5D 18                        	MOV	BL,BYTE [24+EBP]
    38 0000001A 0F B6 7D 0C                     	MOVZX	EDI,BYTE [12+EBP]
    39 0000001E 83 7D 08 00                     	CMP	DWORD [8+EBP],0
    40 00000022 74 07                           	JE	L1
    41 00000024 31 C0                           	XOR	EAX,EAX
    42 00000026 80 FB 1F                        	CMP	BL,31
    43 00000029 76 08                           	JBE	L23
    44 0000002B                                 L1:
    45 0000002B 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    46 0000002E 5B                              	POP	EBX
    47 0000002F 5E                              	POP	ESI
    48 00000030 5F                              	POP	EDI
    49 00000031 5D                              	POP	EBP
    50 00000032 C3                              	RET
    51 00000033                                 L23:
    52 00000033 68 000003F6                     	PUSH	1014
    53 00000038 6A 00                           	PUSH	0
    54 0000003A E8 [00000000]                   	CALL	_WriteByteToPort
    55 0000003F 58                              	POP	EAX
    56 00000040 5A                              	POP	EDX
    57 00000041                                 L9:
    58 00000041 68 000001F7                     	PUSH	503
    59 00000046 E8 [00000000]                   	CALL	_io_in8
    60 0000004B 59                              	POP	ECX
    61 0000004C 84 C0                           	TEST	AL,AL
    62 0000004E 78 07                           	JS	L8
    63 00000050 83 E0 40                        	AND	EAX,64
    64 00000053 84 C0                           	TEST	AL,AL
    65 00000055 75 0A                           	JNE	L5
    66 00000057                                 L8:
    67 00000057 46                              	INC	ESI
    68 00000058 83 FE FF                        	CMP	ESI,-1
    69 0000005B 75 E4                           	JNE	L9
    70 0000005D                                 L14:
    71 0000005D 31 C0                           	XOR	EAX,EAX
    72 0000005F EB CA                           	JMP	L1
    73 00000061                                 L5:
    74 00000061 46                              	INC	ESI
    75 00000062 74 F9                           	JE	L14
    76 00000064 88 D8                           	MOV	AL,BL
    77 00000066 83 E0 10                        	AND	EAX,16
    78 00000069 0F B6 C0                        	MOVZX	EAX,AL
    79 0000006C 85 C0                           	TEST	EAX,EAX
    80 0000006E 0F 84 00000099                  	JE	L12
    81 00000074 83 F8 10                        	CMP	EAX,16
    82 00000077 75 E4                           	JNE	L14
    83 00000079 83 CB F0                        	OR	EBX,-16
    84 0000007C                                 L11:
    85 0000007C 68 000001F1                     	PUSH	497
    86 00000081 6A 4B                           	PUSH	75
    87 00000083 E8 [00000000]                   	CALL	_WriteByteToPort
    88 00000088 68 000001F2                     	PUSH	498
    89 0000008D 6A 01                           	PUSH	1
    90 0000008F E8 [00000000]                   	CALL	_WriteByteToPort
    91 00000094 89 FA                           	MOV	EDX,EDI
    92 00000096 0F B6 C2                        	MOVZX	EAX,DL
    93 00000099 68 000001F3                     	PUSH	499
    94 0000009E 50                              	PUSH	EAX
    95 0000009F E8 [00000000]                   	CALL	_WriteByteToPort
    96 000000A4 68 000001F4                     	PUSH	500
    97 000000A9 0F B6 45 F3                     	MOVZX	EAX,BYTE [-13+EBP]
    98 000000AD 50                              	PUSH	EAX
    99 000000AE E8 [00000000]                   	CALL	_WriteByteToPort
   100 000000B3 83 C4 20                        	ADD	ESP,32
   101 000000B6 0F B6 45 F2                     	MOVZX	EAX,BYTE [-14+EBP]
   102 000000BA 68 000001F5                     	PUSH	501
   103 000000BF 50                              	PUSH	EAX
   104 000000C0 E8 [00000000]                   	CALL	_WriteByteToPort
   105 000000C5 68 000001F6                     	PUSH	502
   106 000000CA 0F B6 C3                        	MOVZX	EAX,BL
   107 000000CD 50                              	PUSH	EAX
   108 000000CE E8 [00000000]                   	CALL	_WriteByteToPort
   109 000000D3 68 000001F7                     	PUSH	503
   110 000000D8 6A 20                           	PUSH	32
   111 000000DA E8 [00000000]                   	CALL	_WriteByteToPort
   112 000000DF 83 C4 18                        	ADD	ESP,24
   113 000000E2                                 L20:
   114 000000E2 68 000001F7                     	PUSH	503
   115 000000E7 E8 [00000000]                   	CALL	_io_in8
   116 000000EC 5A                              	POP	EDX
   117 000000ED 84 C0                           	TEST	AL,AL
   118 000000EF 78 F1                           	JS	L20
   119 000000F1 68 000001F0                     	PUSH	496
   120 000000F6 68 00000200                     	PUSH	512
   121 000000FB FF 75 08                        	PUSH	DWORD [8+EBP]
   122 000000FE E8 [00000000]                   	CALL	_ReadWordStringFromPort
   123 00000103 B8 00000001                     	MOV	EAX,1
   124 00000108 E9 FFFFFF1E                     	JMP	L1
   125 0000010D                                 L12:
   126 0000010D 83 E3 0F                        	AND	EBX,15
   127 00000110 83 EB 20                        	SUB	EBX,32
   128 00000113 E9 FFFFFF64                     	JMP	L11
   129 00000118                                 	GLOBAL	_WriteHDSector
   130 00000118                                 _WriteHDSector:
   131 00000118 55                              	PUSH	EBP
   132 00000119 89 E5                           	MOV	EBP,ESP
   133 0000011B 57                              	PUSH	EDI
   134 0000011C 56                              	PUSH	ESI
   135 0000011D 31 F6                           	XOR	ESI,ESI
   136 0000011F 53                              	PUSH	EBX
   137 00000120 50                              	PUSH	EAX
   138 00000121 8A 45 10                        	MOV	AL,BYTE [16+EBP]
   139 00000124 8A 55 14                        	MOV	DL,BYTE [20+EBP]
   140 00000127 88 45 F3                        	MOV	BYTE [-13+EBP],AL
   141 0000012A 88 55 F2                        	MOV	BYTE [-14+EBP],DL
   142 0000012D 31 C0                           	XOR	EAX,EAX
   143 0000012F 8A 5D 18                        	MOV	BL,BYTE [24+EBP]
   144 00000132 0F B6 7D 0C                     	MOVZX	EDI,BYTE [12+EBP]
   145 00000136 83 7D 08 00                     	CMP	DWORD [8+EBP],0
   146 0000013A 74 07                           	JE	L24
   147 0000013C 31 C0                           	XOR	EAX,EAX
   148 0000013E 80 FB 1F                        	CMP	BL,31
   149 00000141 76 08                           	JBE	L46
   150 00000143                                 L24:
   151 00000143 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   152 00000146 5B                              	POP	EBX
   153 00000147 5E                              	POP	ESI
   154 00000148 5F                              	POP	EDI
   155 00000149 5D                              	POP	EBP
   156 0000014A C3                              	RET
   157 0000014B                                 L46:
   158 0000014B 68 000003F6                     	PUSH	1014
   159 00000150 6A 00                           	PUSH	0
   160 00000152 E8 [00000000]                   	CALL	_WriteByteToPort
   161 00000157 59                              	POP	ECX
   162 00000158 58                              	POP	EAX
   163 00000159                                 L32:
   164 00000159 68 000001F7                     	PUSH	503
   165 0000015E E8 [00000000]                   	CALL	_io_in8
   166 00000163 5A                              	POP	EDX
   167 00000164 84 C0                           	TEST	AL,AL
   168 00000166 78 07                           	JS	L31
   169 00000168 83 E0 40                        	AND	EAX,64
   170 0000016B 84 C0                           	TEST	AL,AL
   171 0000016D 75 0A                           	JNE	L28
   172 0000016F                                 L31:
   173 0000016F 46                              	INC	ESI
   174 00000170 83 FE FF                        	CMP	ESI,-1
   175 00000173 75 E4                           	JNE	L32
   176 00000175                                 L37:
   177 00000175 31 C0                           	XOR	EAX,EAX
   178 00000177 EB CA                           	JMP	L24
   179 00000179                                 L28:
   180 00000179 46                              	INC	ESI
   181 0000017A 74 F9                           	JE	L37
   182 0000017C 88 D8                           	MOV	AL,BL
   183 0000017E 83 E0 10                        	AND	EAX,16
   184 00000181 0F B6 C0                        	MOVZX	EAX,AL
   185 00000184 85 C0                           	TEST	EAX,EAX
   186 00000186 0F 84 00000099                  	JE	L35
   187 0000018C 83 F8 10                        	CMP	EAX,16
   188 0000018F 75 E4                           	JNE	L37
   189 00000191 83 CB F0                        	OR	EBX,-16
   190 00000194                                 L34:
   191 00000194 68 000001F1                     	PUSH	497
   192 00000199 6A 4B                           	PUSH	75
   193 0000019B E8 [00000000]                   	CALL	_WriteByteToPort
   194 000001A0 68 000001F2                     	PUSH	498
   195 000001A5 6A 01                           	PUSH	1
   196 000001A7 E8 [00000000]                   	CALL	_WriteByteToPort
   197 000001AC 89 FA                           	MOV	EDX,EDI
   198 000001AE 0F B6 C2                        	MOVZX	EAX,DL
   199 000001B1 68 000001F3                     	PUSH	499
   200 000001B6 50                              	PUSH	EAX
   201 000001B7 E8 [00000000]                   	CALL	_WriteByteToPort
   202 000001BC 68 000001F4                     	PUSH	500
   203 000001C1 0F B6 45 F3                     	MOVZX	EAX,BYTE [-13+EBP]
   204 000001C5 50                              	PUSH	EAX
   205 000001C6 E8 [00000000]                   	CALL	_WriteByteToPort
   206 000001CB 83 C4 20                        	ADD	ESP,32
   207 000001CE 0F B6 45 F2                     	MOVZX	EAX,BYTE [-14+EBP]
   208 000001D2 68 000001F5                     	PUSH	501
   209 000001D7 50                              	PUSH	EAX
   210 000001D8 E8 [00000000]                   	CALL	_WriteByteToPort
   211 000001DD 68 000001F6                     	PUSH	502
   212 000001E2 0F B6 C3                        	MOVZX	EAX,BL
   213 000001E5 50                              	PUSH	EAX
   214 000001E6 E8 [00000000]                   	CALL	_WriteByteToPort
   215 000001EB 68 000001F7                     	PUSH	503
   216 000001F0 6A 30                           	PUSH	48
   217 000001F2 E8 [00000000]                   	CALL	_WriteByteToPort
   218 000001F7 83 C4 18                        	ADD	ESP,24
   219 000001FA                                 L43:
   220 000001FA 68 000001F7                     	PUSH	503
   221 000001FF E8 [00000000]                   	CALL	_io_in8
   222 00000204 5B                              	POP	EBX
   223 00000205 84 C0                           	TEST	AL,AL
   224 00000207 78 F1                           	JS	L43
   225 00000209 68 000001F0                     	PUSH	496
   226 0000020E 68 00000200                     	PUSH	512
   227 00000213 FF 75 08                        	PUSH	DWORD [8+EBP]
   228 00000216 E8 [00000000]                   	CALL	_WriteWordStringToPort
   229 0000021B B8 00000001                     	MOV	EAX,1
   230 00000220 E9 FFFFFF1E                     	JMP	L24
   231 00000225                                 L35:
   232 00000225 83 E3 0F                        	AND	EBX,15
   233 00000228 83 EB 20                        	SUB	EBX,32
   234 0000022B E9 FFFFFF64                     	JMP	L34
   235 00000230                                 _WaitForRdy:
   236 00000230 55                              	PUSH	EBP
   237 00000231 89 E5                           	MOV	EBP,ESP
   238 00000233 56                              	PUSH	ESI
   239 00000234 53                              	PUSH	EBX
   240 00000235 BB 00010000                     	MOV	EBX,65536
   241 0000023A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   242 0000023D                                 L53:
   243 0000023D 0F B7 C6                        	MOVZX	EAX,SI
   244 00000240 50                              	PUSH	EAX
   245 00000241 E8 [00000000]                   	CALL	_io_in8
   246 00000246 5A                              	POP	EDX
   247 00000247 83 E0 40                        	AND	EAX,64
   248 0000024A 84 C0                           	TEST	AL,AL
   249 0000024C 75 03                           	JNE	L49
   250 0000024E 4B                              	DEC	EBX
   251 0000024F 75 EC                           	JNE	L53
   252 00000251                                 L49:
   253 00000251 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   254 00000254 B8 00000001                     	MOV	EAX,1
   255 00000259 5B                              	POP	EBX
   256 0000025A 5E                              	POP	ESI
   257 0000025B 5D                              	POP	EBP
   258 0000025C C3                              	RET
   259 0000025D                                 _WaitForBsy:
   260 0000025D 55                              	PUSH	EBP
   261 0000025E 89 E5                           	MOV	EBP,ESP
   262 00000260 57                              	PUSH	EDI
   263 00000261 56                              	PUSH	ESI
   264 00000262 31 FF                           	XOR	EDI,EDI
   265 00000264 53                              	PUSH	EBX
   266 00000265 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   267 00000268 BB 00010000                     	MOV	EBX,65536
   268 0000026D                                 L60:
   269 0000026D 0F B7 C6                        	MOVZX	EAX,SI
   270 00000270 50                              	PUSH	EAX
   271 00000271 E8 [00000000]                   	CALL	_io_in8
   272 00000276 59                              	POP	ECX
   273 00000277 84 C0                           	TEST	AL,AL
   274 00000279 79 0D                           	JNS	L61
   275 0000027B 4B                              	DEC	EBX
   276 0000027C 75 EF                           	JNE	L60
   277 0000027E                                 L56:
   278 0000027E 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   279 00000281 89 F8                           	MOV	EAX,EDI
   280 00000283 5B                              	POP	EBX
   281 00000284 5E                              	POP	ESI
   282 00000285 5F                              	POP	EDI
   283 00000286 5D                              	POP	EBP
   284 00000287 C3                              	RET
   285 00000288                                 L61:
   286 00000288 BF 00000001                     	MOV	EDI,1
   287 0000028D EB EF                           	JMP	L56
   288 0000028F                                 _WaitForDrq:
   289 0000028F 55                              	PUSH	EBP
   290 00000290 89 E5                           	MOV	EBP,ESP
   291 00000292 57                              	PUSH	EDI
   292 00000293 56                              	PUSH	ESI
   293 00000294 31 FF                           	XOR	EDI,EDI
   294 00000296 53                              	PUSH	EBX
   295 00000297 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   296 0000029A BB 00010000                     	MOV	EBX,65536
   297 0000029F                                 L68:
   298 0000029F 0F B7 C6                        	MOVZX	EAX,SI
   299 000002A2 50                              	PUSH	EAX
   300 000002A3 E8 [00000000]                   	CALL	_io_in8
   301 000002A8 5A                              	POP	EDX
   302 000002A9 83 E0 08                        	AND	EAX,8
   303 000002AC 84 C0                           	TEST	AL,AL
   304 000002AE 75 0D                           	JNE	L69
   305 000002B0 4B                              	DEC	EBX
   306 000002B1 75 EC                           	JNE	L68
   307 000002B3                                 L64:
   308 000002B3 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   309 000002B6 89 F8                           	MOV	EAX,EDI
   310 000002B8 5B                              	POP	EBX
   311 000002B9 5E                              	POP	ESI
   312 000002BA 5F                              	POP	EDI
   313 000002BB 5D                              	POP	EBP
   314 000002BC C3                              	RET
   315 000002BD                                 L69:
   316 000002BD BF 00000001                     	MOV	EDI,1
   317 000002C2 EB EF                           	JMP	L64
   318 000002C4                                 _CmdSucc:
   319 000002C4 55                              	PUSH	EBP
   320 000002C5 89 E5                           	MOV	EBP,ESP
   321 000002C7 0F B7 45 08                     	MOVZX	EAX,WORD [8+EBP]
   322 000002CB 50                              	PUSH	EAX
   323 000002CC E8 [00000000]                   	CALL	_io_in8
   324 000002D1 59                              	POP	ECX
   325 000002D2 0F BE C0                        	MOVSX	EAX,AL
   326 000002D5 F7 D0                           	NOT	EAX
   327 000002D7 83 E0 01                        	AND	EAX,1
   328 000002DA 0F 95 C0                        	SETNE	AL
   329 000002DD 0F B6 C0                        	MOVZX	EAX,AL
   330 000002E0 C9                              	LEAVE
   331 000002E1 C3                              	RET
   332 000002E2                                 	GLOBAL	_Identify
   333 000002E2                                 _Identify:
   334 000002E2 55                              	PUSH	EBP
   335 000002E3 31 C0                           	XOR	EAX,EAX
   336 000002E5 89 E5                           	MOV	EBP,ESP
   337 000002E7 53                              	PUSH	EBX
   338 000002E8 31 DB                           	XOR	EBX,EBX
   339 000002EA 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   340 000002ED 83 FA 01                        	CMP	EDX,1
   341 000002F0 7F 6E                           	JG	L72
   342 000002F2 4A                              	DEC	EDX
   343 000002F3 74 70                           	JE	L76
   344 000002F5                                 L74:
   345 000002F5 6A 00                           	PUSH	0
   346 000002F7 68 000001F7                     	PUSH	503
   347 000002FC E8 FFFFFF5C                     	CALL	_WaitForBsy
   348 00000301 6A 00                           	PUSH	0
   349 00000303 68 000001F7                     	PUSH	503
   350 00000308 E8 FFFFFF23                     	CALL	_WaitForRdy
   351 0000030D 0F BE C3                        	MOVSX	EAX,BL
   352 00000310 50                              	PUSH	EAX
   353 00000311 68 000001F6                     	PUSH	502
   354 00000316 E8 [00000000]                   	CALL	_io_out8
   355 0000031B 68 000000EC                     	PUSH	236
   356 00000320 68 000001F7                     	PUSH	503
   357 00000325 E8 [00000000]                   	CALL	_io_out8
   358 0000032A 83 C4 20                        	ADD	ESP,32
   359 0000032D 6A 00                           	PUSH	0
   360 0000032F 68 000001F7                     	PUSH	503
   361 00000334 E8 FFFFFF56                     	CALL	_WaitForDrq
   362 00000339 68 000001F0                     	PUSH	496
   363 0000033E 68 00000200                     	PUSH	512
   364 00000343 FF 75 0C                        	PUSH	DWORD [12+EBP]
   365 00000346 E8 [00000000]                   	CALL	_inws
   366 0000034B 68 000001F7                     	PUSH	503
   367 00000350 E8 FFFFFF6F                     	CALL	_CmdSucc
   368 00000355 83 C4 18                        	ADD	ESP,24
   369 00000358 85 C0                           	TEST	EAX,EAX
   370 0000035A 0F 95 C0                        	SETNE	AL
   371 0000035D 0F B6 C0                        	MOVZX	EAX,AL
   372 00000360                                 L72:
   373 00000360 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   374 00000363 C9                              	LEAVE
   375 00000364 C3                              	RET
   376 00000365                                 L76:
   377 00000365 B3 10                           	MOV	BL,16
   378 00000367 EB 8C                           	JMP	L74
   379                                          [SECTION .data]
   380 00000000                                 LC0:
   381 00000000 70 69 64 20 69 73 20 25 64 00   	DB	"pid is %d",0x00
   382                                          [SECTION .text]
   383 00000369                                 	GLOBAL	_task_hd
   384 00000369                                 _task_hd:
   385 00000369 55                              	PUSH	EBP
   386 0000036A 89 E5                           	MOV	EBP,ESP
   387 0000036C 56                              	PUSH	ESI
   388 0000036D 53                              	PUSH	EBX
   389 0000036E 83 EC 20                        	SUB	ESP,32
   390 00000371 E8 [00000000]                   	CALL	_io_cli
   391 00000376                                 L78:
   392 00000376 56                              	PUSH	ESI
   393 00000377 68 00002710                     	PUSH	10000
   394 0000037C E8 [00000000]                   	CALL	_message_receive
   395 00000381 58                              	POP	EAX
   396 00000382 8B 06                           	MOV	EAX,DWORD [ESI]
   397 00000384 5A                              	POP	EDX
   398 00000385 83 F8 01                        	CMP	EAX,1
   399 00000388 75 68                           	JNE	L87
   400 0000038A FF 76 08                        	PUSH	DWORD [8+ESI]
   401 0000038D 6A 00                           	PUSH	0
   402 0000038F 8D 5D D8                        	LEA	EBX,DWORD [-40+EBP]
   403 00000392 E8 FFFFFF4B                     	CALL	_Identify
   404 00000397 6A 0F                           	PUSH	15
   405 00000399 68 000000FF                     	PUSH	255
   406 0000039E 6A 00                           	PUSH	0
   407 000003A0 6A 00                           	PUSH	0
   408 000003A2 6A 00                           	PUSH	0
   409 000003A4 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   410 000003AB 50                              	PUSH	EAX
   411 000003AC FF 35 00000FF8                  	PUSH	DWORD [4088]
   412 000003B2 E8 [00000000]                   	CALL	_boxfill8
   413 000003B7 83 C4 24                        	ADD	ESP,36
   414 000003BA FF 76 0C                        	PUSH	DWORD [12+ESI]
   415 000003BD 68 [00000000]                   	PUSH	LC0
   416 000003C2 53                              	PUSH	EBX
   417 000003C3 E8 [00000000]                   	CALL	_sprintf
   418 000003C8 53                              	PUSH	EBX
   419 000003C9 6A 07                           	PUSH	7
   420 000003CB 6A 00                           	PUSH	0
   421 000003CD 6A 00                           	PUSH	0
   422 000003CF 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   423 000003D6 50                              	PUSH	EAX
   424 000003D7 FF 35 00000FF8                  	PUSH	DWORD [4088]
   425 000003DD E8 [00000000]                   	CALL	_putfonts8_asc
   426 000003E2 83 C4 24                        	ADD	ESP,36
   427 000003E5                                 L86:
   428 000003E5 56                              	PUSH	ESI
   429 000003E6 FF 76 0C                        	PUSH	DWORD [12+ESI]
   430 000003E9 E8 [00000000]                   	CALL	_message_send
   431 000003EE 5B                              	POP	EBX
   432 000003EF 58                              	POP	EAX
   433 000003F0 EB 84                           	JMP	L78
   434 000003F2                                 L87:
   435 000003F2 83 F8 02                        	CMP	EAX,2
   436 000003F5 75 1B                           	JNE	L84
   437 000003F7 FF 76 08                        	PUSH	DWORD [8+ESI]
   438 000003FA 6A 00                           	PUSH	0
   439 000003FC E8 FFFFFEE1                     	CALL	_Identify
   440 00000401 56                              	PUSH	ESI
   441 00000402 FF 76 0C                        	PUSH	DWORD [12+ESI]
   442 00000405 E8 [00000000]                   	CALL	_message_send
   443 0000040A 83 C4 10                        	ADD	ESP,16
   444 0000040D E9 FFFFFF64                     	JMP	L78
   445 00000412                                 L84:
   446 00000412 C7 46 08 00000000               	MOV	DWORD [8+ESI],0
   447 00000419 EB CA                           	JMP	L86
   448 0000041B                                 	GLOBAL	_IdeInitialize
   449 0000041B                                 _IdeInitialize:
   450 0000041B 55                              	PUSH	EBP
   451 0000041C 89 E5                           	MOV	EBP,ESP
   452 0000041E 6A 00                           	PUSH	0
   453 00000420 68 000001F7                     	PUSH	503
   454 00000425 E8 FFFFFE33                     	CALL	_WaitForBsy
   455 0000042A 6A 00                           	PUSH	0
   456 0000042C 68 000001F7                     	PUSH	503
   457 00000431 E8 FFFFFDFA                     	CALL	_WaitForRdy
   458 00000436 68 000003F6                     	PUSH	1014
   459 0000043B 6A 0E                           	PUSH	14
   460 0000043D E8 [00000000]                   	CALL	_io_out8
   461 00000442 6A 00                           	PUSH	0
   462 00000444 68 000001F7                     	PUSH	503
   463 00000449 E8 FFFFFE0F                     	CALL	_WaitForBsy
   464 0000044E 83 C4 20                        	ADD	ESP,32
   465 00000451 6A 00                           	PUSH	0
   466 00000453 68 000001F7                     	PUSH	503
   467 00000458 E8 FFFFFDD3                     	CALL	_WaitForRdy
   468 0000045D B8 00000001                     	MOV	EAX,1
   469 00000462 C9                              	LEAVE
   470 00000463 C3                              	RET
   471 00000464                                 	GLOBAL	_inthandler2e
   472 00000464                                 _inthandler2e:
   473 00000464 55                              	PUSH	EBP
   474 00000465 89 E5                           	MOV	EBP,ESP
   475 00000467 6A 66                           	PUSH	102
   476 00000469 68 000000A0                     	PUSH	160
   477 0000046E E8 [00000000]                   	CALL	_io_out8
   478 00000473 6A 62                           	PUSH	98
   479 00000475 6A 20                           	PUSH	32
   480 00000477 E8 [00000000]                   	CALL	_io_out8
   481 0000047C C9                              	LEAVE
   482 0000047D C3                              	RET
   483 0000047E                                 	GLOBAL	_HDEntry
   484 0000047E                                 _HDEntry:
   485 0000047E 55                              	PUSH	EBP
   486 0000047F 89 E5                           	MOV	EBP,ESP
   487 00000481 56                              	PUSH	ESI
   488 00000482 53                              	PUSH	EBX
   489 00000483 81 EC 00000220                  	SUB	ESP,544
   490 00000489 8D 85 FFFFFDD8                  	LEA	EAX,DWORD [-552+EBP]
   491 0000048F 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   492 00000492 50                              	PUSH	EAX
   493 00000493 6A 00                           	PUSH	0
   494 00000495 E8 FFFFFE48                     	CALL	_Identify
   495 0000049A E8 [00000000]                   	CALL	_task_alloc
   496 0000049F 68 00010000                     	PUSH	65536
   497 000004A4 FF 76 04                        	PUSH	DWORD [4+ESI]
   498 000004A7 89 C3                           	MOV	EBX,EAX
   499 000004A9 E8 [00000000]                   	CALL	_memman_alloc_4k
   500 000004AE 05 00010000                     	ADD	EAX,65536
   501 000004B3 89 43 64                        	MOV	DWORD [100+EBX],EAX
   502 000004B6 C7 43 4C [00000369]             	MOV	DWORD [76+EBX],_task_hd
   503 000004BD C7 43 74 00000008               	MOV	DWORD [116+EBX],8
   504 000004C4 C7 43 78 00000010               	MOV	DWORD [120+EBX],16
   505 000004CB C7 43 7C 00000008               	MOV	DWORD [124+EBX],8
   506 000004D2 C7 83 00000080 00000008         	MOV	DWORD [128+EBX],8
   507 000004DC C7 83 00000084 00000008         	MOV	DWORD [132+EBX],8
   508 000004E6 C7 83 00000088 00000008         	MOV	DWORD [136+EBX],8
   509 000004F0 6A 02                           	PUSH	2
   510 000004F2 6A 03                           	PUSH	3
   511 000004F4 53                              	PUSH	EBX
   512 000004F5 E8 [00000000]                   	CALL	_task_run
   513 000004FA B8 00000001                     	MOV	EAX,1
   514 000004FF 89 1D 00000F01                  	MOV	DWORD [3841],EBX
   515 00000505 89 5E 08                        	MOV	DWORD [8+ESI],EBX
   516 00000508 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   517 0000050B 5B                              	POP	EBX
   518 0000050C 5E                              	POP	ESI
   519 0000050D 5D                              	POP	EBP
   520 0000050E C3                              	RET
